-- 一次電マニのSYSTEMIDから二次マニの情報を取得する
-- 一次電マニ <- 二次紙マニ
SELECT
    ISNULL(PAPER_MANI.HAIKI_KBN_CD, -1) AS SECOND_HAIKI_KBN_CD,
    ISNULL(PAPER_MANI.SYSTEM_ID, -1) AS SECOND_SYSTEM_ID,
    ISNULL(PAPER_MANI.DETAIL_SYSTEM_ID, -1) AS SECOND_DETAIL_SYSTEM_ID,
    PAPER_MANI.LAST_SBN_GYOUSHA_CD AS LAST_SBN_GYOUSHA_CD,
    PAPER_MANI.LAST_SBN_GENBA_CD AS LAST_SBN_GENBA_CD,
    PAPER_MANI.LAST_SBN_JOU_NAME AS LAST_SBN_JOU_NAME,
    PAPER_MANI.LAST_SBN_JOU_POST AS LAST_SBN_JOU_POST,
    PAPER_MANI.LAST_SBN_JOU_ADDRESS AS LAST_SBN_JOU_ADDRESS,
    PAPER_MANI.LAST_SBN_JOU_TEL AS LAST_SBN_JOU_TEL,
    PAPER_MANI.LAST_SBN_END_DATE AS LAST_SBN_END_DATE,
    FIRS_ELECT_DETAIL.SBN_ENDREP_KBN
FROM 
    (
        -- DT_R18_MIXがあるため、一度、一次電マニを取得してから、そのテーブルから二次マニへつなげる
        SELECT
            CASE WHEN R18MIX.DETAIL_SYSTEM_ID IS NOT NULL
                THEN R18MIX.DETAIL_SYSTEM_ID
                ELSE R18EX.SYSTEM_ID
            END AS SYSTEM_ID,
            TOC.KANRI_ID AS KANRI_ID,
            TOC.LATEST_SEQ AS LATEST_SEQ,
            TOC.KIND AS KIND,
            R18EX.SYSTEM_ID AS EX_SYSTEM_ID,
            R18EX.SEQ AS EX_SEQ,
            TOC.MANIFEST_ID AS MANIFEST_ID,
            R18EX.DELETE_FLG AS DELETE_FLG,
            CASE WHEN R18MIX.DETAIL_SYSTEM_ID IS NOT NULL
                THEN R18MIX.SBN_ENDREP_KBN
                ELSE 1
            END AS SBN_ENDREP_KBN
        FROM
            DT_MF_TOC AS TOC
            INNER JOIN DT_R18 AS R18 ON TOC.KANRI_ID = R18.KANRI_ID AND TOC.LATEST_SEQ = R18.SEQ
            INNER JOIN DT_R18_EX AS R18EX ON R18.KANRI_ID = R18EX.KANRI_ID AND R18EX.DELETE_FLG = 0
            LEFT JOIN DT_R18_MIX AS R18MIX ON R18EX.KANRI_ID = R18MIX.KANRI_ID AND R18MIX.DELETE_FLG = 0
    ) AS FIRS_ELECT_MANI
    INNER JOIN 
    (
        -- 一次電マニに繋がっている、DT_R18_EXとDT_R18_MIXを取得
        SELECT
            CASE WHEN R18MIX.DETAIL_SYSTEM_ID IS NOT NULL
                THEN R18MIX.DETAIL_SYSTEM_ID
                ELSE R18EX.SYSTEM_ID
            END AS SYSTEM_ID,
            TOC.KANRI_ID AS KANRI_ID,
            R18EX.SYSTEM_ID AS EX_SYSTEM_ID,
            R18EX.DELETE_FLG AS DELETE_FLG,
            CASE WHEN R18MIX.DETAIL_SYSTEM_ID IS NOT NULL
                THEN R18MIX.SBN_ENDREP_KBN
                ELSE 1
            END AS SBN_ENDREP_KBN
        FROM
            DT_MF_TOC AS TOC
            INNER JOIN DT_R18 AS R18 ON TOC.KANRI_ID = R18.KANRI_ID AND TOC.LATEST_SEQ = R18.SEQ
            INNER JOIN DT_R18_EX AS R18EX ON R18.KANRI_ID = R18EX.KANRI_ID AND R18EX.DELETE_FLG = 0
            LEFT JOIN DT_R18_MIX AS R18MIX ON R18EX.KANRI_ID = R18MIX.KANRI_ID AND R18MIX.DELETE_FLG = 0
    ) AS FIRS_ELECT_DETAIL ON FIRS_ELECT_MANI.KANRI_ID = FIRS_ELECT_DETAIL.KANRI_ID AND FIRS_ELECT_DETAIL.DELETE_FLG = 0
    LEFT JOIN T_MANIFEST_RELATION AS TMR ON FIRS_ELECT_DETAIL.SYSTEM_ID = TMR.FIRST_SYSTEM_ID AND TMR.FIRST_HAIKI_KBN_CD = 4 AND TMR.DELETE_FLG = 0 AND TMR.NEXT_HAIKI_KBN_CD <> 4
    LEFT JOIN (
        SELECT
            TME.HAIKI_KBN_CD AS HAIKI_KBN_CD,
            TME.SYSTEM_ID AS SYSTEM_ID,
            TME.SEQ AS SEQ,
            TMD.DETAIL_SYSTEM_ID AS DETAIL_SYSTEM_ID,
            TMD.LAST_SBN_GYOUSHA_CD AS LAST_SBN_GYOUSHA_CD,
            TMD.LAST_SBN_GENBA_CD AS LAST_SBN_GENBA_CD,
            GENBA.GENBA_NAME1 AS LAST_SBN_JOU_NAME,
            GENBA.GENBA_POST AS LAST_SBN_JOU_POST,
            ISNULL(TODOUFUKEN.TODOUFUKEN_NAME, '') + ISNULL(GENBA.GENBA_ADDRESS1, '') + ISNULL(GENBA.GENBA_ADDRESS2, '') AS LAST_SBN_JOU_ADDRESS,
            GENBA.GENBA_TEL AS LAST_SBN_JOU_TEL,
            TMD.LAST_SBN_END_DATE AS LAST_SBN_END_DATE
        FROM
            T_MANIFEST_ENTRY AS TME
            INNER JOIN T_MANIFEST_DETAIL AS TMD ON TME.SYSTEM_ID = TMD.SYSTEM_ID AND TME.SEQ = TMD.SEQ
            LEFT JOIN M_GENBA AS GENBA ON TMD.LAST_SBN_GYOUSHA_CD = GENBA.GYOUSHA_CD AND TMD.LAST_SBN_GENBA_CD = GENBA.GENBA_CD
            LEFT JOIN M_TODOUFUKEN AS TODOUFUKEN ON GENBA.GENBA_TODOUFUKEN_CD = TODOUFUKEN.TODOUFUKEN_CD
        WHERE
            TME.DELETE_FLG = 0
    ) AS PAPER_MANI ON TMR.NEXT_SYSTEM_ID = PAPER_MANI.DETAIL_SYSTEM_ID AND TMR.NEXT_HAIKI_KBN_CD <> 4

WHERE
    FIRS_ELECT_MANI.DELETE_FLG = 0
    AND FIRS_ELECT_MANI.KIND = 5
    AND FIRS_ELECT_MANI.SYSTEM_ID = /*SYSTEM_ID*/0
    AND FIRS_ELECT_MANI.SBN_ENDREP_KBN = 1
    -- 二次電マニの情報を取得するとき、一緒に「DT_R18_MIXがある」かつ「区分CD：中間」の情報を取得する
    AND FIRS_ELECT_DETAIL.SBN_ENDREP_KBN = 1
    --AND TMR.NEXT_HAIKI_KBN_CD <> 4

-- 一次電マニ <- 二次電マニ
UNION
SELECT
    ISNULL(ELEC_MANI.HAIKI_KBN_CD, -1) AS SECOND_HAIKI_KBN_CD,
    ISNULL(ELEC_MANI.EX_SYSTEM_ID, -1) AS SECOND_SYSTEM_ID,
    ISNULL(ELEC_MANI.REC_SEQ, -1) AS SECOND_DETAIL_SYSTEM_ID,
    ELEC_MANI.LAST_SBN_GYOUSHA_CD AS LAST_SBN_GYOUSHA_CD,
    ELEC_MANI.LAST_SBN_GENBA_CD AS LAST_SBN_GENBA_CD,
    ELEC_MANI.LAST_SBN_JOU_NAME AS LAST_SBN_JOU_NAME,
    ELEC_MANI.LAST_SBN_JOU_POST AS LAST_SBN_JOU_POST,
    ELEC_MANI.LAST_SBN_JOU_ADDRESS AS LAST_SBN_JOU_ADDRESS,
    ELEC_MANI.LAST_SBN_JOU_TEL AS LAST_SBN_JOU_TEL,
    CONVERT(DateTime, ELEC_MANI.LAST_SBN_END_DATE, 111) AS LAST_SBN_END_DATE,
    FIRS_ELECT_DETAIL.SBN_ENDREP_KBN
FROM
    (
        -- DT_R18_MIXがあるため、一度、一次電マニを取得し、DT_R18_EXやDT_R18_MIXを取得、さらにそのテーブルに二次マニへつなげる
        SELECT
            CASE WHEN R18MIX.DETAIL_SYSTEM_ID IS NOT NULL
                THEN R18MIX.DETAIL_SYSTEM_ID
                ELSE R18EX.SYSTEM_ID
            END AS SYSTEM_ID,
            TOC.KANRI_ID AS KANRI_ID,
            TOC.KIND AS KIND,
            R18EX.SYSTEM_ID AS EX_SYSTEM_ID,
            R18EX.DELETE_FLG AS DELETE_FLG
        FROM
            DT_MF_TOC AS TOC
            INNER JOIN DT_R18 AS R18 ON TOC.KANRI_ID = R18.KANRI_ID AND TOC.LATEST_SEQ = R18.SEQ
            INNER JOIN DT_R18_EX AS R18EX ON R18.KANRI_ID = R18EX.KANRI_ID AND R18EX.DELETE_FLG = 0
            LEFT JOIN DT_R18_MIX AS R18MIX ON R18EX.KANRI_ID = R18MIX.KANRI_ID AND R18MIX.DELETE_FLG = 0
    ) AS FIRS_ELECT_MANI
    INNER JOIN 
    (
        -- 一次電マニに繋がっている、DT_R18_EXとDT_R18_MIXを取得
        SELECT
            CASE WHEN R18MIX.DETAIL_SYSTEM_ID IS NOT NULL
                THEN R18MIX.DETAIL_SYSTEM_ID
                ELSE R18EX.SYSTEM_ID
            END AS SYSTEM_ID,
            TOC.KANRI_ID AS KANRI_ID,
            R18EX.SYSTEM_ID AS EX_SYSTEM_ID,
            R18EX.DELETE_FLG AS DELETE_FLG,
            CASE WHEN R18MIX.DETAIL_SYSTEM_ID IS NOT NULL
                THEN R18MIX.SBN_ENDREP_KBN
                ELSE 1
            END AS SBN_ENDREP_KBN
        FROM
            DT_MF_TOC AS TOC
            INNER JOIN DT_R18 AS R18 ON TOC.KANRI_ID = R18.KANRI_ID AND TOC.LATEST_SEQ = R18.SEQ
            INNER JOIN DT_R18_EX AS R18EX ON R18.KANRI_ID = R18EX.KANRI_ID AND R18EX.DELETE_FLG = 0
            LEFT JOIN DT_R18_MIX AS R18MIX ON R18EX.KANRI_ID = R18MIX.KANRI_ID AND R18MIX.DELETE_FLG = 0
    ) AS FIRS_ELECT_DETAIL ON FIRS_ELECT_MANI.KANRI_ID = FIRS_ELECT_DETAIL.KANRI_ID AND FIRS_ELECT_DETAIL.DELETE_FLG = 0
    LEFT JOIN T_MANIFEST_RELATION AS TMR ON FIRS_ELECT_DETAIL.SYSTEM_ID = TMR.FIRST_SYSTEM_ID AND TMR.FIRST_HAIKI_KBN_CD = 4 AND TMR.DELETE_FLG = 0 AND (TMR.NEXT_HAIKI_KBN_CD = 4 OR ISNULL(TMR.NEXT_HAIKI_KBN_CD, '') = '')
    LEFT JOIN (
        SELECT DISTINCT
            4 AS HAIKI_KBN_CD,
            TOC.KANRI_ID AS KANRI_ID,
            TOC.LATEST_SEQ AS LATEST_SEQ,
            R18EX.SYSTEM_ID AS EX_SYSTEM_ID,
            R18EX.SEQ AS EX_SEQ,
            R13.REC_SEQ AS REC_SEQ,
            R13EX.LAST_SBN_GYOUSHA_CD AS LAST_SBN_GYOUSHA_CD,
            R13EX.LAST_SBN_GENBA_CD AS LAST_SBN_GENBA_CD,
            R13.LAST_SBN_JOU_NAME AS LAST_SBN_JOU_NAME,
            R13.LAST_SBN_JOU_POST AS LAST_SBN_JOU_POST,
            ISNULL(R13.LAST_SBN_JOU_ADDRESS1, '') + ISNULL(R13.LAST_SBN_JOU_ADDRESS2, '') + ISNULL(R13.LAST_SBN_JOU_ADDRESS3, '') + ISNULL(R13.LAST_SBN_JOU_ADDRESS4, '') AS LAST_SBN_JOU_ADDRESS,
            R13.LAST_SBN_JOU_TEL AS LAST_SBN_JOU_TEL,
            R13.LAST_SBN_END_DATE AS LAST_SBN_END_DATE
        FROM
            DT_MF_TOC AS TOC
            INNER JOIN DT_R18 AS R18 ON TOC.KANRI_ID = R18.KANRI_ID AND TOC.LATEST_SEQ = R18.SEQ
            INNER JOIN DT_R18_EX AS R18EX ON R18.KANRI_ID = R18EX.KANRI_ID AND R18EX.DELETE_FLG = 0
            INNER JOIN DT_R13 AS R13 ON TOC.KANRI_ID = R13.KANRI_ID AND TOC.LATEST_SEQ = R13.SEQ
            LEFT JOIN DT_R13_EX AS R13EX ON R13.KANRI_ID = R13EX.KANRI_ID AND R13.REC_SEQ = R13EX.REC_SEQ AND R13EX.DELETE_FLG = 0
    ) AS ELEC_MANI ON TMR.NEXT_SYSTEM_ID = ELEC_MANI.EX_SYSTEM_ID AND TMR.NEXT_HAIKI_KBN_CD = 4

WHERE
    FIRS_ELECT_MANI.DELETE_FLG = 0
    AND FIRS_ELECT_MANI.KIND = 5
    AND FIRS_ELECT_MANI.SYSTEM_ID = /*SYSTEM_ID*/0
    -- 二次電マニの情報を取得するとき、一緒に「DT_R18_MIXがある」かつ「区分CD：中間」かつ「紐付けられていてもいなくても」の情報を取得する
    -- 「紐付けられていてもいなくても」：こちらのSQLのみで未紐付の情報を取得するため。(紙マニ側でも取得すると重複する可能性があるため)
    AND FIRS_ELECT_DETAIL.SBN_ENDREP_KBN = 1
    --AND (TMR.NEXT_HAIKI_KBN_CD = 4 OR ISNULL(TMR.NEXT_HAIKI_KBN_CD, '') = '')