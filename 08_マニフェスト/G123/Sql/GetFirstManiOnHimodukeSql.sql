----紙マニ場合紐付け済み一次マニフェスト情報取得SQL文
SELECT  TME.SYSTEM_ID AS SYSTEM_ID,
        TME.SEQ AS SEQ,
        MHK.HAIKI_KBN_NAME AS HAIKI_KBN_NAME,
        TME.KOUFU_DATE AS KOUFU_DATE,					--交付日付
        TME.MANIFEST_ID AS MANIFEST_ID,					--交付番号
        TME.HST_GYOUSHA_NAME AS HST_GYOUSHA_NAME,
        TME.HST_GENBA_NAME AS HST_GENBA_NAME,
        MHS.HAIKI_SHURUI_NAME_RYAKU AS HAIKI_SHURUI_NAME_RYAKU,
        MHN.HAIKI_NAME AS HAIKI_NAME,
        MHB.HOUKOKUSHO_BUNRUI_NAME_RYAKU AS HOUKOKUSHO_BUNRUI_NAME_RYAKU,
        TMD.HAIKI_SUU AS HAIKI_SUU,
        MU.UNIT_NAME_RYAKU AS UNIT_NAME_RYAKU,
        TMD.GENNYOU_SUU AS GENNYOU_SUU,
        MN.NISUGATA_NAME_RYAKU AS NISUGATA_NAME_RYAKU,
        MSH.SHOBUN_HOUHOU_NAME_RYAKU AS SHOBUN_HOUHOU_NAME_RYAKU,
        MIN_TMU.UPN_GYOUSHA_NAME AS UPN_GYOUSHA_NAME,
        TME.SBN_JYUTAKUSHA_NAME AS SBN_JYUTAKUSHA_NAME,
        MAX_TMU.UPN_SAKI_GENBA_NAME AS UPN_SAKI_GENBA_NAME,
        MGB.GENBA_NAME_RYAKU AS LAST_SBN_GENBA_NAME,    --最終処分事業場名称
        TMR.SEQ AS NEXT_SEQ,							--二次履歴SEQ
        TMR.REC_SEQ AS NEXT_REC_SEQ,					--二次レコードSEQ
        TMR.NEXT_HAIKI_KBN_CD,							--二次マニ種類
        TME.HAIKI_KBN_CD AS HAIKI_KBN_CD,				--一次マニ種類
        TMR.TIME_STAMP AS TIME_STAMP,					--紐付テープル関連データのTimeStamp（論理削除するため）
        NULL AS KANRI_ID,								--電子マニ管理番号
        NULL AS LATEST_SEQ,								--電子マニSEQ番号
        NULL AS KANSAN_SUU,								--電子換算後数量
        TMD.DETAIL_SYSTEM_ID AS DETAIL_SYSTEM_ID,		--マニ明細SYSTEM_ID
        TMD.HAIKI_NAME_CD AS HAIKI_NAME_CD,				--廃棄物名称CD
        MAX_TMU.UPN_END_DATE AS LAST_UPN_END_DATE,      --運搬終了日
        TMD.SBN_END_DATE AS SBN_END_DATE                --処分終了日

        ,TMD.HAIKI_SHURUI_CD		 AS HAIKI_SHURUI_CD

        ,TME.SYSTEM_ID               AS TME_SYSTEM_ID
        ,TME.SEQ                     AS TME_SEQ
        ,convert(int,TME.TIME_STAMP) AS TME_TIME_STAMP
        ,null                        AS R18EX_SYSTEM_ID
        ,null                        AS R18EX_SEQ
        ,null                        AS R18EX_TIME_STAMP 
    
FROM T_MANIFEST_ENTRY TME WITH(NOLOCK)
INNER JOIN T_MANIFEST_DETAIL TMD WITH(NOLOCK) ON TME.SYSTEM_ID = TMD.SYSTEM_ID AND TME.SEQ = TMD.SEQ 
INNER JOIN (SELECT NEXT_SYSTEM_ID,SEQ,REC_SEQ,NEXT_HAIKI_KBN_CD,FIRST_SYSTEM_ID,FIRST_HAIKI_KBN_CD,TIME_STAMP 
            FROM T_MANIFEST_RELATION WITH(NOLOCK) WHERE T_MANIFEST_RELATION.DELETE_FLG = 0 AND NEXT_SYSTEM_ID = /*data.NEXT_SYSTEM_ID*/ AND FIRST_HAIKI_KBN_CD IN (1, 2, 3) AND NEXT_HAIKI_KBN_CD = /*data.NEXT_HAIKI_KBN_CD*/) TMR  
            ON TMD.DETAIL_SYSTEM_ID = TMR.FIRST_SYSTEM_ID
LEFT JOIN T_MANIFEST_UPN AS MIN_TMU WITH(NOLOCK) ON MIN_TMU.SYSTEM_ID = TME.SYSTEM_ID AND MIN_TMU.UPN_ROUTE_NO = (SELECT DISTINCT MIN(UPN_ROUTE_NO) FROM T_MANIFEST_UPN WITH(NOLOCK) WHERE SYSTEM_ID = TME.SYSTEM_ID AND SEQ = TME.SEQ)
LEFT JOIN T_MANIFEST_UPN AS MAX_TMU WITH(NOLOCK) ON MAX_TMU.SYSTEM_ID = TME.SYSTEM_ID AND TME.SEQ = MAX_TMU.SEQ 
INNER JOIN (SELECT T_MANIFEST_ENTRY.SYSTEM_ID 
           , T_MANIFEST_ENTRY.SEQ 
           , MAX(T_MANIFEST_UPN.UPN_ROUTE_NO) AS UPN_ROUTE_NO
        FROM T_MANIFEST_ENTRY WITH(NOLOCK) 
       INNER JOIN T_MANIFEST_UPN WITH(NOLOCK) 
          ON T_MANIFEST_ENTRY.SYSTEM_ID = T_MANIFEST_UPN.SYSTEM_ID 
         AND T_MANIFEST_ENTRY.SEQ = T_MANIFEST_UPN.SEQ 
       WHERE T_MANIFEST_ENTRY.DELETE_FLG = 'false' 
         AND 
         (
         ((T_MANIFEST_ENTRY.HAIKI_KBN_CD = '1' OR T_MANIFEST_ENTRY.HAIKI_KBN_CD = '2') AND T_MANIFEST_UPN.UPN_END_DATE IS NOT NULL)
         OR (T_MANIFEST_ENTRY.HAIKI_KBN_CD = '3' AND T_MANIFEST_UPN.UPN_SAKI_KBN IS NOT NULL)
         )
       GROUP BY T_MANIFEST_ENTRY.SYSTEM_ID 
           , T_MANIFEST_ENTRY.SEQ 
      ) AS TMU_SEARCH
    ON MAX_TMU.SYSTEM_ID = TMU_SEARCH.SYSTEM_ID 
   AND MAX_TMU.SEQ = TMU_SEARCH.SEQ 
   AND MAX_TMU.UPN_ROUTE_NO = TMU_SEARCH.UPN_ROUTE_NO 
LEFT JOIN M_HAIKI_KBN MHK    WITH(NOLOCK) ON TME.HAIKI_KBN_CD = MHK.HAIKI_KBN_CD
LEFT JOIN M_HAIKI_SHURUI MHS WITH(NOLOCK) ON MHS.HAIKI_KBN_CD = TME.HAIKI_KBN_CD AND TMD.HAIKI_SHURUI_CD = MHS.HAIKI_SHURUI_CD
LEFT JOIN M_HAIKI_NAME MHN   WITH(NOLOCK) ON MHN.HAIKI_NAME_CD = TMD.HAIKI_NAME_CD 
LEFT JOIN M_HOUKOKUSHO_BUNRUI MHB WITH(NOLOCK) ON MHB.HOUKOKUSHO_BUNRUI_CD = MHS.HOUKOKUSHO_BUNRUI_CD
LEFT JOIN M_UNIT MU     WITH(NOLOCK) ON MU.UNIT_CD = TMD.HAIKI_UNIT_CD
LEFT JOIN M_NISUGATA MN WITH(NOLOCK) ON MN.NISUGATA_CD = TMD.NISUGATA_CD
LEFT JOIN M_SHOBUN_HOUHOU MSH WITH(NOLOCK) ON MSH.SHOBUN_HOUHOU_CD = TMD.SBN_HOUHOU_CD
LEFT JOIN M_GYOUSHA MGA WITH(NOLOCK) ON MGA.GYOUSHA_CD = TMD.LAST_SBN_GYOUSHA_CD AND MGA.SHOBUN_NIOROSHI_GYOUSHA_KBN = 1

LEFT JOIN M_GENBA MGB   WITH(NOLOCK) ON MGB.GYOUSHA_CD = TMD.LAST_SBN_GYOUSHA_CD AND MGB.GENBA_CD = TMD.LAST_SBN_GENBA_CD AND MGB.SAISHUU_SHOBUNJOU_KBN = 1
WHERE TME.DELETE_FLG = 0 
        AND MIN_TMU.SYSTEM_ID = TME.SYSTEM_ID  
        AND MIN_TMU.SEQ = TME.SEQ 
        AND MAX_TMU.SYSTEM_ID = TME.SYSTEM_ID  
        AND MAX_TMU.SEQ = TME.SEQ 
----電子マニ場合紐付け済み一次マニフェスト情報取得SQL文

UNION 

SELECT  SubQry1.FIRST_SYSTEM_ID,
        SubQry1.FIRST_SEQ,
        --'4' AS HAIKI_KBN_CD,
        '電子' AS HAIKI_KBN_NAME,
        CASE ISDATE(DT_R18.HIKIWATASHI_DATE)
            WHEN 1 THEN CONVERT(datetime,DT_R18.HIKIWATASHI_DATE,120)
            ELSE NULL
        END AS KOUFU_DATE,
        DT_R18.MANIFEST_ID AS MANIFEST_ID,
        --'' AS HST_GYOUSHA_CD,
        DT_R18.HST_SHA_NAME AS HST_GYOUSHA_NAME,
        --'' AS HST_GENBA_CD,
        DT_R18.HST_JOU_NAME AS HST_GENBA_NAME,
        --DT_R18.HAIKI_DAI_CODE + DT_R18.HAIKI_CHU_CODE + DT_R18.HAIKI_SHO_CODE AS HAIKI_SHURUI_CD,
         (CASE WHEN R18EX.DETAIL_SYSTEM_ID IS NOT NULL THEN R18EX.HAIKI_SHURUI_NAME ELSE DT_R18.HAIKI_SHURUI END) AS HAIKI_SHURUI_NAME_RYAKU,
        --'' AS HAIKI_NAME_CD,
         (CASE WHEN R18EX.DETAIL_SYSTEM_ID IS NOT NULL THEN R18EX.HAIKI_NAME ELSE DT_R18.HAIKI_NAME END) AS HAIKI_NAME,
        --MDHS.HOUKOKUSHO_BUNRUI_CD,
         (CASE WHEN R18EX.DETAIL_SYSTEM_ID IS NOT NULL THEN R18EX.HOUKOKUSHO_BUNRUI_NAME_RYAKU ELSE MHB.HOUKOKUSHO_BUNRUI_NAME_RYAKU END) AS HOUKOKUSHO_BUNRUI_NAME_RYAKU,
         (CASE WHEN R18EX.DETAIL_SYSTEM_ID IS NOT NULL THEN R18EX.HAIKI_SUU ELSE DT_R18.HAIKI_KAKUTEI_SUU END) AS HAIKI_SUU,
        --DT_R18.HAIKI_KAKUTEI_UNIT_CODE,
         (CASE WHEN R18EX.DETAIL_SYSTEM_ID IS NOT NULL THEN R18EX.UNIT_NAME_RYAKU ELSE MU.UNIT_NAME_RYAKU END) AS UNIT_NAME_RYAKU,
        -- (CASE WHEN R18EX.DETAIL_SYSTEM_ID IS NOT NULL THEN R18EX.GENNYOU_SUU ELSE DT_R18.HAIKI_KAKUTEI_SUU END) AS GENNYOU_SUU,
        R18EX.CONNECT_GENNYOU_SUU GENNYOU_SUU,
        --DT_R18.NISUGATA_CODE ,
        DT_R18.NISUGATA_NAME AS NISUGATA_NAME_RYAKU,
        --DT_R18.SBN_WAY_CODE,
         (CASE WHEN R18EX.DETAIL_SYSTEM_ID IS NOT NULL THEN R18EX.SHOBUN_HOUHOU_NAME_RYAKU ELSE DT_R18.SBN_WAY_NAME END) AS SHOBUN_HOUHOU_NAME_RYAKU,
        --'' AS UPN_SHA_CD,
        MINR19.UPN_SHA_NAME AS UPN_GYOUSHA_NAME,
        --'' AS UPN_GYOUSHA_CD,
        DT_R18.SBN_SHA_NAME AS SBN_JYUTAKUSHA_NAME,
        --'' AS UPNSAKI_JOU_CD,
        MAXR19.UPNSAKI_JOU_NAME AS UPN_SAKI_GENBA_NAME,
        --'' AS LAST_SBN_JOU_CD,
        DT_R13.LAST_SBN_JOU_NAME AS LAST_SBN_GENBA_NAME,	--最終処分事業場名称
        SubQry1.NEXT_SEQ AS NEXT_SEQ,						--二次履歴SEQ
        SubQry1.REC_SEQ AS NEXT_REC_SEQ,					--二次レコードSEQ
        SubQry1.NEXT_HAIKI_KBN_CD,							--二次マニ種類
        CAST('4' AS SMALLINT ) AS HAIKI_KBN_CD  ,			--一次マニ種類
        SubQry1.TIME_STAMP AS TIME_STAMP,					--紐付テープル関連データのTimeStamp（論理削除するため）
        DT_R18.KANRI_ID AS KANRI_ID,						--電子マニ管理番号
        SubQry1.LATEST_SEQ AS LATEST_SEQ,					--電子マニSEQ番号
        SubQry1.KANSAN_SUU AS KANSAN_SUU,					--電子換算後数量
        NULL AS DETAIL_SYSTEM_ID,							--マニ明細SYSTEM_ID
        (SELECT TOP 1 HAIKI_NAME_CD FROM M_DENSHI_HAIKI_NAME WITH(NOLOCK) WHERE DELETE_FLG = 0 AND HAIKI_NAME = DT_R18.HAIKI_NAME ) AS HAIKI_NAME_CD, --電子廃棄物名称CD
        case ISDATE(MAXR19.UPN_END_DATE) WHEN 1 THEN CONVERT(datetime,MAXR19.UPN_END_DATE,120)else null end AS LAST_UPN_END_DATE, --運搬終了日 
        CASE ISDATE(DT_R18.SBN_END_DATE)
            WHEN 1 THEN CONVERT(datetime, DT_R18.SBN_END_DATE ,120)
            ELSE NULL
        END AS SBN_END_DATE                                                              --処分終了日 

        ,R18EX.HAIKI_SHURUI_CD		 AS HAIKI_SHURUI_CD
        ,null                          AS TME_SYSTEM_ID
        ,null                          AS TME_SEQ
        ,null                          AS TME_TIME_STAMP
        ,R18EX.CONNECT_SYSTEM_ID AS R18EX_SYSTEM_ID
        ,R18EX.CONNECT_SEQ AS R18EX_SEQ
        ,convert(int,R18EX.CONNECT_TIME_STAMP) AS R18EX_TIME_STAMP
                                
FROM 	DT_R18 WITH(NOLOCK) LEFT JOIN M_DENSHI_HAIKI_SHURUI MDHS WITH(NOLOCK) ON MDHS.HAIKI_SHURUI_CD = DT_R18.HAIKI_DAI_CODE + DT_R18.HAIKI_CHU_CODE + DT_R18.HAIKI_SHO_CODE AND MDHS.DELETE_FLG = 0
        LEFT JOIN M_HOUKOKUSHO_BUNRUI MHB WITH(NOLOCK) ON MHB.HOUKOKUSHO_BUNRUI_CD = MDHS.HOUKOKUSHO_BUNRUI_CD AND MHB.DELETE_FLG = 0 
        LEFT JOIN M_UNIT MU WITH(NOLOCK) ON MU.UNIT_CD = DT_R18.HAIKI_KAKUTEI_UNIT_CODE AND MU.DELETE_FLG = 0 
        LEFT JOIN DT_R19 AS MINR19 WITH(NOLOCK) ON MINR19.KANRI_ID = DT_R18.KANRI_ID AND MINR19.SEQ = DT_R18.SEQ AND MINR19.UPN_ROUTE_NO = (SELECT DISTINCT MIN(UPN_ROUTE_NO) FROM DT_R19 WITH(NOLOCK) WHERE DT_R19.KANRI_ID = DT_R18.KANRI_ID AND DT_R19.SEQ = DT_R18.SEQ)
        LEFT JOIN DT_R19 AS MAXR19 WITH(NOLOCK) ON MAXR19.KANRI_ID = DT_R18.KANRI_ID AND MAXR19.SEQ = DT_R18.SEQ AND MAXR19.UPN_ROUTE_NO = (SELECT DISTINCT MAX(UPN_ROUTE_NO) FROM DT_R19 WITH(NOLOCK) WHERE DT_R19.KANRI_ID = DT_R18.KANRI_ID AND DT_R19.SEQ = DT_R18.SEQ)
        LEFT JOIN (
           SELECT
              DT_R13.KANRI_ID,
              DT_R13.SEQ,
              DT_R13.LAST_SBN_JOU_NAME,
              DT_R13.ROW_COUNT
           FROM 
              (SELECT
                DT_R13.KANRI_ID,
                DT_R13.SEQ,
                CASE WHEN DT_R13_COUNT.ROW_COUNT = 1 THEN DT_R13.LAST_SBN_JOU_NAME
                  ELSE '全' + CONVERT(varchar, DT_R13_COUNT.ROW_COUNT) + '件'
                END AS LAST_SBN_JOU_NAME,
                DT_R13_COUNT.ROW_COUNT
              FROM
                DT_R13 WITH(NOLOCK)
              INNER JOIN 
                (
                SELECT
                  DT_R13.KANRI_ID,
                  DT_R13.SEQ,
                  COUNT(*) AS ROW_COUNT
                FROM
                  DT_R13 WITH(NOLOCK)
                GROUP BY
                  DT_R13.KANRI_ID,
                  DT_R13.SEQ
                ) AS DT_R13_COUNT
              ON
                DT_R13.KANRI_ID = DT_R13_COUNT.KANRI_ID
                AND DT_R13.SEQ = DT_R13_COUNT.SEQ
              ) DT_R13
           GROUP BY
              DT_R13.KANRI_ID,
              DT_R13.SEQ,
              DT_R13.LAST_SBN_JOU_NAME,
              DT_R13.ROW_COUNT
          )
        AS DT_R13 ON DT_R13.KANRI_ID = DT_R18.KANRI_ID AND DT_R13.SEQ = DT_R18.SEQ 
        LEFT JOIN (
                SELECT
                    MIX.*
                    ,(CASE WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL THEN MIX.DETAIL_SYSTEM_ID ELSE EX.SYSTEM_ID END) AS CONNECT_SYSTEM_ID
                    ,(CASE WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL THEN MIX.SEQ ELSE EX.SEQ END) AS CONNECT_SEQ
                    ,(CASE WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL THEN convert(int,MIX.TIME_STAMP) ELSE convert(int,EX.TIME_STAMP) END) AS CONNECT_TIME_STAMP
                    ,EX.KANRI_ID AS EX_KANRI_ID
                    ,(CASE WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL THEN MIX.GENNYOU_SUU ELSE EX.GENNYOU_SUU END) AS CONNECT_GENNYOU_SUU
                FROM DT_R18_EX AS EX WITH(NOLOCK)
                LEFT JOIN (
                        SELECT
                            M_DENSHI_HAIKI_SHURUI.HAIKI_SHURUI_NAME
                            ,M_HAIKI_NAME.HAIKI_NAME
                            ,M_HOUKOKUSHO_BUNRUI.HOUKOKUSHO_BUNRUI_NAME_RYAKU
                            ,M_UNIT.UNIT_NAME_RYAKU
                            ,M_SHOBUN_HOUHOU.SHOBUN_HOUHOU_NAME_RYAKU
                            ,DT_R18_MIX.*
                        FROM DT_R18_MIX WITH(NOLOCK)
                        LEFT JOIN (SELECT * FROM M_DENSHI_HAIKI_SHURUI WITH(NOLOCK) WHERE DELETE_FLG = 0) AS M_DENSHI_HAIKI_SHURUI
                            ON (DT_R18_MIX.HAIKI_DAI_CODE + DT_R18_MIX.HAIKI_CHU_CODE + DT_R18_MIX.HAIKI_SHO_CODE) = M_DENSHI_HAIKI_SHURUI.HAIKI_SHURUI_CD
                        LEFT JOIN (SELECT * FROM M_HAIKI_NAME WITH(NOLOCK) WHERE DELETE_FLG = 0) AS M_HAIKI_NAME
                            ON DT_R18_MIX.HAIKI_NAME_CD = M_HAIKI_NAME.HAIKI_NAME_CD
                        LEFT JOIN (SELECT * FROM M_HOUKOKUSHO_BUNRUI WITH(NOLOCK) WHERE DELETE_FLG = 0) AS M_HOUKOKUSHO_BUNRUI ON
                            M_DENSHI_HAIKI_SHURUI.HOUKOKUSHO_BUNRUI_CD = M_HOUKOKUSHO_BUNRUI.HOUKOKUSHO_BUNRUI_CD
                        LEFT JOIN (SELECT * FROM M_UNIT WITH(NOLOCK) WHERE DELETE_FLG = 0) AS M_UNIT ON
                            DT_R18_MIX.HAIKI_UNIT_CD = M_UNIT.UNIT_CD
                        LEFT JOIN (SELECT * FROM M_SHOBUN_HOUHOU WITH(NOLOCK) WHERE DELETE_FLG = 0) AS M_SHOBUN_HOUHOU ON
                            DT_R18_MIX.SBN_HOUHOU_CD = M_SHOBUN_HOUHOU.SHOBUN_HOUHOU_CD
                        WHERE ((DT_R18_MIX.DELETE_FLG = 0) AND (DT_R18_MIX.SBN_ENDREP_KBN = 1))
                    ) AS MIX ON
                    EX.SYSTEM_ID = MIX.SYSTEM_ID
                WHERE EX.DELETE_FLG = 0
            ) AS R18EX
                ON R18EX.EX_KANRI_ID = DT_R18.KANRI_ID
,(SELECT DT_MF_TOC.KANRI_ID,
        DT_MF_TOC.LATEST_SEQ,
        R18KENRI.FIRST_SEQ,
        R18KENRI.NEXT_SYSTEM_ID,
        R18KENRI.NEXT_SEQ,
        R18KENRI.REC_SEQ,
        R18KENRI.NEXT_HAIKI_KBN_CD,
        R18KENRI.FIRST_SYSTEM_ID,
        R18KENRI.FIRST_HAIKI_KBN_CD,
        R18KENRI.TIME_STAMP,
        R18KENRI.KANSAN_SUU

    FROM 
        (SELECT
            DT_R18_EX.KANRI_ID
           ,DT_R18_EX.SYSTEM_ID
           ,DT_R18_EX.SEQ AS FIRST_SEQ
           ,DT_R18_EX.KANSAN_SUU
           ,TMR.NEXT_SYSTEM_ID
           ,TMR.SEQ AS NEXT_SEQ
           ,TMR.REC_SEQ
           ,TMR.NEXT_HAIKI_KBN_CD
           ,TMR.FIRST_SYSTEM_ID
           ,TMR.FIRST_HAIKI_KBN_CD
           ,TMR.TIME_STAMP
        FROM (
                SELECT
                    EX.KANRI_ID
                    ,(CASE WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL THEN MIX.DETAIL_SYSTEM_ID ELSE EX.SYSTEM_ID END) AS SYSTEM_ID
                    ,(CASE WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL THEN MIX.SEQ ELSE EX.SEQ END) AS SEQ
                    ,(CASE WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL THEN MIX.KANSAN_SUU ELSE EX.KANSAN_SUU END) AS KANSAN_SUU
                FROM DT_R18_EX AS EX WITH(NOLOCK)
                LEFT JOIN (SELECT * FROM DT_R18_MIX WITH(NOLOCK) WHERE ((DELETE_FLG = 0) AND (SBN_ENDREP_KBN = 1))) AS MIX
                    ON EX.SYSTEM_ID = MIX.SYSTEM_ID
                WHERE EX.DELETE_FLG = 0
            ) AS DT_R18_EX
            INNER JOIN (SELECT NEXT_SYSTEM_ID,SEQ,REC_SEQ,NEXT_HAIKI_KBN_CD,FIRST_SYSTEM_ID,FIRST_HAIKI_KBN_CD,TIME_STAMP
                        FROM T_MANIFEST_RELATION WITH(NOLOCK) 
                        WHERE DELETE_FLG = 0 AND NEXT_SYSTEM_ID = /*data.NEXT_SYSTEM_ID*/ AND NEXT_HAIKI_KBN_CD = /*data.NEXT_HAIKI_KBN_CD*/
                        AND FIRST_HAIKI_KBN_CD = 4 ) TMR ON DT_R18_EX.SYSTEM_ID = TMR.FIRST_SYSTEM_ID
        ) R18KENRI
        ,DT_MF_TOC WITH(NOLOCK)
    WHERE R18KENRI.KANRI_ID = DT_MF_TOC.KANRI_ID ) SubQry1

WHERE DT_R18.KANRI_ID = SubQry1.KANRI_ID 
        AND DT_R18.SEQ = SubQry1.LATEST_SEQ 
        AND R18EX.CONNECT_SYSTEM_ID = SubQry1.FIRST_SYSTEM_ID
ORDER BY
    KOUFU_DATE,
    MANIFEST_ID,
    HAIKI_SHURUI_CD,
    SYSTEM_ID,
    DETAIL_SYSTEM_ID
