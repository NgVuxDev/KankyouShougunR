----電子マニ場合紐付け対象一次マニフェスト情報取得SQL文
SELECT
  R18EX.CONNECT_SYSTEM_ID AS SYSTEM_ID
  , R18EX.CONNECT_SEQ AS SEQ
  , ( 
    CASE 
      WHEN R18EX.DETAIL_SYSTEM_ID IS NOT NULL 
        THEN R18EX.KANSAN_SUU 
      ELSE ( 
        SELECT
          CASE 
            WHEN TBL.KANSANSHIKI = 0 
              THEN DT_R18.HAIKI_KAKUTEI_SUU * TBL.KANSANCHI 
            ELSE DT_R18.HAIKI_KAKUTEI_SUU / TBL.KANSANCHI 
            END 
        FROM
          ( 
            SELECT
              KANSANSHIKI
              , KANSANCHI 
            FROM
              M_MANIFEST_KANSAN 
            WHERE
              DELETE_FLG = 0 
              AND HOUKOKUSHO_BUNRUI_CD = MDHS.HOUKOKUSHO_BUNRUI_CD 
              AND HAIKI_NAME_CD = ( 
                SELECT
                  TOP 1 HAIKI_NAME_CD 
                FROM
                  M_DENSHI_HAIKI_NAME 
                WHERE
                  DELETE_FLG = 0 
                  AND HAIKI_NAME = DT_R18.HAIKI_NAME
              ) 
              AND UNIT_CD = DT_R18.HAIKI_KAKUTEI_UNIT_CODE 
              AND NISUGATA_CD = DT_R18.NISUGATA_CODE
          ) AS TBL
      ) 
      END
  ) AS KANSAN_SUU                                 --換算後数量
  , DT_R18.KANRI_ID AS KANRI_ID                   --管理番号
  , DMT.LATEST_SEQ AS LATEST_SEQ                  --最後のSEQ
  , R18EX.CONNECT_SYSTEM_ID AS SYSTEM_ID
  , R18EX.CONNECT_SEQ AS DT_R18_EX_SEQ
  , R18EX.CONNECT_TIME_STAMP AS DT_R18_EX_TIME_STAMP
  , CASE ISDATE(DT_R18.SBN_END_DATE)
            WHEN 1 THEN CONVERT(datetime, DT_R18.SBN_END_DATE ,120)
            ELSE NULL
    END AS SBN_END_DATE                                                             --処分終了日
  , DT_R13.LAST_SBN_END_DATE AS LAST_SBN_END_DATE        --最終処分終了日 
  ,R18EX.HST_GYOUSHA_CD
  ,R18EX.HST_GENBA_CD
FROM
  DT_MF_TOC AS DMT 
  INNER JOIN DT_R18 
    ON DMT.KANRI_ID = DT_R18.KANRI_ID 
    AND DMT.LATEST_SEQ = DT_R18.SEQ 
    AND DT_R18.MANIFEST_ID IS NOT NULL 
    AND DT_R18.MANIFEST_ID <> '' 
  INNER JOIN ( 
    SELECT
      EX.SYSTEM_ID AS EX_SYS_ID
      , EX.SEQ AS EX_SEQ
      , EX.HST_GYOUSHA_CD
      , EX.HST_GENBA_CD
      , EX.SBN_GYOUSHA_CD
      , EX.KANRI_ID AS EX_KANRI_ID
      , ( 
        CASE 
          WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL 
            THEN MIX.GENNYOU_SUU 
          ELSE EX.GENNYOU_SUU 
          END
      ) AS CONNECT_GENNYOU_SUU
      , ( 
        CASE 
          WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL 
            THEN convert(int, MIX.TIME_STAMP) 
          ELSE convert(int, EX.TIME_STAMP) 
          END
      ) AS CONNECT_TIME_STAMP
      , ( 
        CASE 
          WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL 
            THEN MIX.DETAIL_SYSTEM_ID 
          ELSE EX.SYSTEM_ID 
          END
      ) AS CONNECT_SYSTEM_ID
      , ( 
        CASE 
          WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL 
            THEN MIX.SEQ 
          ELSE EX.SEQ 
          END
      ) AS CONNECT_SEQ
      , ( 
        CASE 
          WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL 
            THEN MIX.MANIFEST_ID 
          ELSE EX.MANIFEST_ID 
          END
      ) AS CONNECT_MANIFEST_ID
      , ( 
        CASE 
          WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL 
            THEN MIX.HAIKI_DAI_CODE + MIX.HAIKI_CHU_CODE + MIX.HAIKI_SHO_CODE + MIX.HAIKI_SAI_CODE
          ELSE R18.HAIKI_DAI_CODE + R18.HAIKI_CHU_CODE + R18.HAIKI_SHO_CODE + R18.HAIKI_SAI_CODE
          END
      ) AS CONNECT_HAIKI_SHURUI_CD
      , ( 
        CASE 
          WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL 
            THEN MIX.HAIKI_NAME_CD 
          ELSE EX.HAIKI_NAME_CD 
          END
      ) AS CONNECT_HAIKI_NAME_CD
      , ( 
        CASE 
          WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL 
            THEN M_DENSHI_HAIKI_SHURUI_MIX.HOUKOKUSHO_BUNRUI_CD 
          ELSE M_DENSHI_HAIKI_SHURUI_R18.HOUKOKUSHO_BUNRUI_CD 
          END
      ) AS CONNECT_HOUKOKUSHO_BUNRUI_CD
      , ( 
        CASE 
          WHEN MIX.DETAIL_SYSTEM_ID IS NOT NULL 
            THEN MIX.SBN_HOUHOU_CD 
          ELSE R18.SBN_WAY_CODE 
          END
      ) AS CONNECT_SBN_HOUHOU_CD
      , MIX.* 
      , HST_GYOUSHA.JISHA_KBN
    FROM
      DT_R18_EX AS EX 
      INNER JOIN ( 
        SELECT
          DT_R18.* 
        FROM
          DT_R18 
          INNER JOIN DT_MF_TOC 
            ON ( 
              (DT_R18.KANRI_ID = DT_MF_TOC.KANRI_ID) 
              AND (DT_R18.SEQ = DT_MF_TOC.LATEST_SEQ)
            )
      ) AS R18 
        ON EX.KANRI_ID = R18.KANRI_ID 
      LEFT JOIN ( 
        SELECT
          M_DENSHI_HAIKI_SHURUI.HAIKI_SHURUI_NAME
          , M_HAIKI_NAME.HAIKI_NAME
          , M_HOUKOKUSHO_BUNRUI.HOUKOKUSHO_BUNRUI_NAME_RYAKU
          , M_HOUKOKUSHO_BUNRUI.HOUKOKUSHO_BUNRUI_CD
          , M_UNIT.UNIT_NAME_RYAKU
          , M_SHOBUN_HOUHOU.SHOBUN_HOUHOU_NAME_RYAKU
          , DT_R18_MIX.* 
        FROM
          DT_R18_MIX 
          LEFT JOIN ( 
            SELECT
              * 
            FROM
              M_DENSHI_HAIKI_SHURUI 
            WHERE
              DELETE_FLG = 0
          ) AS M_DENSHI_HAIKI_SHURUI 
            ON ( 
              DT_R18_MIX.HAIKI_DAI_CODE + DT_R18_MIX.HAIKI_CHU_CODE + DT_R18_MIX.HAIKI_SHO_CODE
            ) = M_DENSHI_HAIKI_SHURUI.HAIKI_SHURUI_CD 
          LEFT JOIN (SELECT * FROM M_HAIKI_NAME WHERE DELETE_FLG = 0) AS M_HAIKI_NAME 
            ON DT_R18_MIX.HAIKI_NAME_CD = M_HAIKI_NAME.HAIKI_NAME_CD 
          LEFT JOIN ( 
            SELECT
              * 
            FROM
              M_HOUKOKUSHO_BUNRUI 
            WHERE
              DELETE_FLG = 0
          ) AS M_HOUKOKUSHO_BUNRUI 
            ON M_DENSHI_HAIKI_SHURUI.HOUKOKUSHO_BUNRUI_CD = M_HOUKOKUSHO_BUNRUI.HOUKOKUSHO_BUNRUI_CD 
          LEFT JOIN (SELECT * FROM M_UNIT WHERE DELETE_FLG = 0) AS M_UNIT 
            ON DT_R18_MIX.HAIKI_UNIT_CD = M_UNIT.UNIT_CD 
          LEFT JOIN ( 
            SELECT
              * 
            FROM
              M_SHOBUN_HOUHOU 
            WHERE
              DELETE_FLG = 0
          ) AS M_SHOBUN_HOUHOU 
            ON DT_R18_MIX.SBN_HOUHOU_CD = M_SHOBUN_HOUHOU.SHOBUN_HOUHOU_CD 
        WHERE
          DT_R18_MIX.DELETE_FLG = 0
      ) AS MIX 
        ON EX.SYSTEM_ID = MIX.SYSTEM_ID 
      LEFT JOIN ( 
        SELECT
          * 
        FROM
          M_DENSHI_HAIKI_SHURUI 
        WHERE
          DELETE_FLG = 0
      ) AS M_DENSHI_HAIKI_SHURUI_MIX 
        ON ( 
          MIX.HAIKI_DAI_CODE + MIX.HAIKI_CHU_CODE + MIX.HAIKI_SHO_CODE
        ) = M_DENSHI_HAIKI_SHURUI_MIX.HAIKI_SHURUI_CD 
      LEFT JOIN ( 
        SELECT
          * 
        FROM
          M_DENSHI_HAIKI_SHURUI 
        WHERE
          DELETE_FLG = 0
      ) AS M_DENSHI_HAIKI_SHURUI_R18 
        ON ( 
          R18.HAIKI_DAI_CODE + R18.HAIKI_CHU_CODE + R18.HAIKI_SHO_CODE
        ) = M_DENSHI_HAIKI_SHURUI_R18.HAIKI_SHURUI_CD 
      LEFT JOIN M_GYOUSHA AS HST_GYOUSHA
	    ON EX.HST_GYOUSHA_CD = HST_GYOUSHA.GYOUSHA_CD
    WHERE
      EX.DELETE_FLG = 0
  ) AS R18EX 
    ON R18EX.EX_KANRI_ID = DT_R18.KANRI_ID 
  LEFT JOIN T_MANIFEST_RELATION AS TMR 
    ON R18EX.CONNECT_SYSTEM_ID = TMR.FIRST_SYSTEM_ID 
    AND TMR.FIRST_HAIKI_KBN_CD = 4 
    AND TMR.DELETE_FLG = 0 
  INNER JOIN DT_R19_EX AS MAXR19EX 
    ON R18EX.EX_SYS_ID = MAXR19EX.SYSTEM_ID 
    AND R18EX.EX_SEQ = MAXR19EX.SEQ 
  INNER JOIN DT_R19 AS MAXR19 
    ON MAXR19EX.KANRI_ID = MAXR19.KANRI_ID 
    AND MAXR19EX.UPN_ROUTE_NO = MAXR19.UPN_ROUTE_NO 
  INNER JOIN ( 
    SELECT
      DT_R19.KANRI_ID
      , DT_R19.SEQ
      , MAX(DT_R19.UPN_ROUTE_NO) AS UPN_ROUTE_NO 
    FROM
      DT_MF_TOC 
      INNER JOIN DT_R19 
        ON DT_MF_TOC.KANRI_ID = DT_R19.KANRI_ID 
        AND DT_MF_TOC.LATEST_SEQ = DT_R19.SEQ 
    WHERE
      DT_R19.UPN_END_DATE IS NOT NULL 
    GROUP BY
      DT_R19.KANRI_ID
      , DT_R19.SEQ
  ) AS SEARCHR19 
    ON MAXR19.KANRI_ID = SEARCHR19.KANRI_ID 
    AND MAXR19.SEQ = SEARCHR19.SEQ 
    AND MAXR19.UPN_ROUTE_NO = SEARCHR19.UPN_ROUTE_NO 
  INNER JOIN DT_R19_EX AS MINR19EX 
    ON R18EX.EX_SYS_ID = MINR19EX.SYSTEM_ID 
    AND R18EX.EX_SEQ = MINR19EX.SEQ 
    AND MINR19EX.UPN_ROUTE_NO = 1 
    AND MINR19EX.DELETE_FLG = 0 
  INNER JOIN DT_R19 AS MINR19 
    ON MINR19EX.KANRI_ID = MINR19.KANRI_ID 
    AND DMT.LATEST_SEQ = MINR19.SEQ 
    AND MINR19EX.UPN_ROUTE_NO = MINR19.UPN_ROUTE_NO 
  LEFT JOIN ( 
    SELECT
      DT_R13.KANRI_ID
      , DT_R13.SEQ
      , DT_R13.MANIFEST_ID
      , DT_R13.LAST_SBN_JOU_NAME
      , DT_R13.LAST_SBN_JOU_ADDRESS1
      , DT_R13.LAST_SBN_JOU_ADDRESS2
      , DT_R13.LAST_SBN_JOU_ADDRESS3
      , DT_R13.LAST_SBN_JOU_ADDRESS4
      , DT_R13.LAST_SBN_END_DATE
      , DT_R13.LAST_SBN_GYOUSHA_CD
      , DT_R13.LAST_SBN_GENBA_CD
      , DT_R13.ROW_COUNT 
    FROM
      ( 
        SELECT
          DT_R13.KANRI_ID
          , DT_R13.SEQ
          , DT_R13.MANIFEST_ID
          , CASE 
            WHEN DT_R13_COUNT.ROW_COUNT = 1 
              THEN DT_R13.LAST_SBN_JOU_NAME 
            ELSE '全' + CONVERT(varchar, DT_R13_COUNT.ROW_COUNT) + '件' 
            END AS LAST_SBN_JOU_NAME
          , CASE 
            WHEN DT_R13_COUNT.ROW_COUNT = 1 
              THEN DT_R13.LAST_SBN_JOU_ADDRESS1 
            ELSE '' 
            END AS LAST_SBN_JOU_ADDRESS1
          , CASE 
            WHEN DT_R13_COUNT.ROW_COUNT = 1 
              THEN DT_R13.LAST_SBN_JOU_ADDRESS2 
            ELSE '' 
            END AS LAST_SBN_JOU_ADDRESS2
          , CASE 
            WHEN DT_R13_COUNT.ROW_COUNT = 1 
              THEN DT_R13.LAST_SBN_JOU_ADDRESS3 
            ELSE '' 
            END AS LAST_SBN_JOU_ADDRESS3
          , CASE 
            WHEN DT_R13_COUNT.ROW_COUNT = 1 
              THEN DT_R13.LAST_SBN_JOU_ADDRESS3 
            ELSE '' 
            END AS LAST_SBN_JOU_ADDRESS4
          , CASE 
            WHEN DT_R13_COUNT.ROW_COUNT = 1 
              THEN DT_R13.LAST_SBN_END_DATE 
            ELSE '' 
            END AS LAST_SBN_END_DATE
          , CASE 
            WHEN DT_R13_COUNT.ROW_COUNT = 1 
              THEN DT_R13_EX.LAST_SBN_GYOUSHA_CD 
            ELSE '' 
            END AS LAST_SBN_GYOUSHA_CD
          , CASE 
            WHEN DT_R13_COUNT.ROW_COUNT = 1 
              THEN DT_R13_EX.LAST_SBN_GENBA_CD 
            ELSE '' 
            END AS LAST_SBN_GENBA_CD
          , DT_R13_COUNT.ROW_COUNT 
        FROM
          DT_R13 
          INNER JOIN ( 
            SELECT
              DT_R13.KANRI_ID
              , DT_R13.SEQ
              , COUNT(*) AS ROW_COUNT 
            FROM
              DT_R13 
            GROUP BY
              DT_R13.KANRI_ID
              , DT_R13.SEQ
          ) AS DT_R13_COUNT 
            ON DT_R13.KANRI_ID = DT_R13_COUNT.KANRI_ID 
            AND DT_R13.SEQ = DT_R13_COUNT.SEQ 
          LEFT JOIN DT_R13_EX 
            ON DT_R13.KANRI_ID = DT_R13_EX.KANRI_ID 
            AND DT_R13_EX.REC_SEQ = DT_R13.REC_SEQ 
            AND DT_R13_EX.DELETE_FLG = 0
      ) DT_R13 
    GROUP BY
      DT_R13.KANRI_ID
      , DT_R13.SEQ
      , DT_R13.MANIFEST_ID
      , DT_R13.LAST_SBN_JOU_NAME
      , DT_R13.LAST_SBN_JOU_ADDRESS1
      , DT_R13.LAST_SBN_JOU_ADDRESS2
      , DT_R13.LAST_SBN_JOU_ADDRESS3
      , DT_R13.LAST_SBN_JOU_ADDRESS4
      , DT_R13.LAST_SBN_END_DATE
      , DT_R13.LAST_SBN_GYOUSHA_CD
      , DT_R13.LAST_SBN_GENBA_CD
      , DT_R13.ROW_COUNT
  ) AS DT_R13 
    ON DT_R18.KANRI_ID = DT_R13.KANRI_ID 
    AND DT_R18.SEQ = DT_R13.SEQ 
  LEFT OUTER JOIN M_DENSHI_HAIKI_SHURUI AS MDHS 
    ON MDHS.HAIKI_SHURUI_CD = DT_R18.HAIKI_DAI_CODE + DT_R18.HAIKI_CHU_CODE + DT_R18.HAIKI_SHO_CODE 
    AND MDHS.DELETE_FLG = 0 
  LEFT OUTER JOIN M_HOUKOKUSHO_BUNRUI AS MHB 
    ON MHB.HOUKOKUSHO_BUNRUI_CD = MDHS.HOUKOKUSHO_BUNRUI_CD 
    AND MHB.DELETE_FLG = 0 
  LEFT OUTER JOIN M_UNIT AS MU 
    ON MU.UNIT_CD = DT_R18.HAIKI_KAKUTEI_UNIT_CODE 
    AND MU.DELETE_FLG = 0 
  LEFT OUTER JOIN M_GENBA MGB_SHOBUN 
    ON MGB_SHOBUN.GYOUSHA_CD = MAXR19EX.UPNSAKI_GYOUSHA_CD 
    AND MGB_SHOBUN.GENBA_CD = MAXR19EX.UPNSAKI_GENBA_CD 
    AND MGB_SHOBUN.DELETE_FLG = 0
WHERE
        (DMT.KIND = 4 or DMT.KIND = 5 or DMT.KIND IS NULL)
    AND (DMT.STATUS_FLAG = 3 OR DMT.STATUS_FLAG = 4)
    AND DT_R18.MANIFEST_ID = /*data.MANIFEST_ID*/0
    AND R18EX.CONNECT_HAIKI_SHURUI_CD = /*HAIKI_SHURUI_CD*/'0100' 
    AND ISNULL(R18EX.CONNECT_HAIKI_NAME_CD,'') = /*HAIKI_NAME_CD*/'000001'
/*IF firstFlg*/
 AND (ISNULL(DT_R18.FIRST_MANIFEST_FLAG, '') = '' OR ISNULL(R18EX.JISHA_KBN, 0) = 0)
--ELSE
 AND (ISNULL(DT_R18.FIRST_MANIFEST_FLAG, '') <> '' AND ISNULL(R18EX.JISHA_KBN, 0) = 1)
/*END*/