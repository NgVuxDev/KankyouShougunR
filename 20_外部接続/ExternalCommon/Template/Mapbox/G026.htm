<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@Title</title>
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no" />
    <script src="https://api.mapbox.com/mapbox-gl-js/v1.10.0/mapbox-gl.js"></script>
    <link href="https://api.mapbox.com/mapbox-gl-js/v1.10.0/mapbox-gl.css" rel="stylesheet" />
    <style>
        body
        {
            margin: 0;
            padding: 0;
        }
        #map
        {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 100%;
        }
    </style>
</head>
<body>
    <style>

/* #region CSS */
/* #region ポップアップの透過率設定*/
.mapboxgl-popup {
        opacity: 0.9;
    }
/* #endregion */
/* #region 配車情報ラベル */
#dataInfoLabel
        {
            position: absolute;
            left:20%;
            top: 0;
            bottom: 0;
            width:60%;
            height: 30px;
            font-weight: bold;
        }
#dataInfoLabel2
        {
            position: absolute;
            left:20%;
            top: 30px;
            bottom: 0;
            width:60%;
            height: 30px;
            font-weight: bold;
        }
/* #endregion */
/* #region 割当済みラベル */
        #wariateLabel
        {
            position: absolute;
            left:0;
            top: 0;
            bottom: 0;
            width:20%;
            height: 5%;
            font-weight: bold;
            text-align: center;
            background: #4682b4;
            color: #ffffff;
            display: flex;
            justify-content: center;
            align-items: center;
        }
/* #endregion */
/* #region 設置コンテナラベル */
        #secchiContenaLabel
        {
            position: absolute;
            left:0%;
            top: 50%;
            bottom: 0;
            width:20%;
            height: 5%;
            font-weight: bold;
            text-align: center;
            background: #bdbdbd;
            color: #ffffff;
            display: flex;
            justify-content: center;
            align-items: center;
        }
/* #endregion */
/* #region 未配車ラベル */
        #mihaishaLabel
        {
            position: absolute;
            left:80%;
            top: 0;
            bottom: 0;
            width:20%;
            height: 5%;
            font-weight: bold;
            text-align: center;
            background: #ff0000;
            color: #ffffff;
            display: flex;
            justify-content: center;
            align-items: center;
        }
/* #endregion */
/* #region 地図 */
        #map
        {
            position: absolute;
            left: 20%;
            top: 60px;
            bottom: 0;
            width: 60%;
        }
/* #endregion */
/* #region 割当済みのリスト */
.wariate-list
        {
            position: absolute;
            width: 20%;
            top: 5%;
            bottom: 0;
            left: 0;
            font: 12px/20px 'Helvetica Neue' , Arial, Helvetica, sans-serif;
            background-color: #fff;
            height: 45%;
            overflow: auto;
        }
        .wariate-list fieldset
        {
            display: none;
            background: #ddd;
            border: none;
            padding: 10px;
            margin: 0;
            overflow: hidden;
        }
        .wariate-list input
        {
            display: block;
            border: none;
            width: 100%;
            border-radius: 3px;
            padding: 10px;
            margin: 0;
            box-sizing: border-box;
        }

        .wariate-list .wariateListing > *
        {
            display: block;
            padding: 5px 10px;
            margin: 0;
        }

        .wariate-list .wariateListing details summary
        {
            list-style: none;
            cursor: pointer;
            padding: 5px;
            background: #e4e4e4;
            color: white;
            font-size: 1rem;
            font-weight: bold;
        }

        .wariate-list .wariateListing a
        {
            display: block;
            padding: 5px 10px;
            margin: 0;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            color: #404;
            text-decoration: none;
        }

        .wariate-list .wariateListing a:last-child
        {
            border: none;
        }

        .wariate-list .wariateListing a:hover
        {
            background: #f0f0f0;
        }
/* #endregion */        
/* #region 未配車のリスト */
        .mihaisha-list
        {
            position: absolute;
            width: 20%;
            top: 5%;
            bottom: 0;
            left: 80%;
            font: 12px/20px 'Helvetica Neue' , Arial, Helvetica, sans-serif;
            background-color: #fff;
            height: 95%;
            overflow: auto;
        }
        .mihaisha-list fieldset
        {
            display: none;
            background: #ddd;
            border: none;
            padding: 10px;
            margin: 0;
            overflow: hidden;
        }
        .mihaisha-list input
        {
            display: block;
            border: none;
            width: 100%;
            border-radius: 3px;
            padding: 10px;
            margin: 0;
            box-sizing: border-box;
        }

        .mihaisha-list .mihaishaListing > *
        {
            display: block;
            padding: 5px 10px;
            margin: 0;
        }

        .mihaisha-list .mihaishaListing details summary
        {
            list-style: none;
            cursor: pointer;
            padding: 5px;
            background: #e4e4e4;
            color: white;
            font-size: 1rem;
            font-weight: bold;
        }

        .mihaisha-list .mihaishaListing a
        {
            display: block;
            padding: 5px 10px;
            margin: 0;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            color: #404;
            text-decoration: none;
        }

        .mihaisha-list .mihaishaListing a:last-child
        {
            border: none;
        }

        .mihaisha-list .mihaishaListing a:hover
        {
            background: #f0f0f0;
        }

/* #endregion */
/* #region コンテナのリスト */
        .contena-list
        {
            position: absolute;
            width: 20%;
            top: 55%;
            bottom: 0;
            left: 0;
            font: 12px/20px 'Helvetica Neue' , Arial, Helvetica, sans-serif;
            background-color: #fff;
            height: 45%;
            overflow: auto;
        }
        .contena-list fieldset
        {
            display: none;
            background: #ddd;
            border: none;
            padding: 10px;
            margin: 0;
            overflow: hidden;
        }
        .contena-list input
        {
            display: block;
            border: none;
            width: 100%;
            border-radius: 3px;
            padding: 10px;
            margin: 0;
            box-sizing: border-box;
        }

        .contena-list .contenaListing > *
        {
            display: block;
            padding: 5px 10px;
            margin: 0;
        }

        .contena-list .contenaListing details summary
        {
            list-style: none;
            cursor: pointer;
            padding: 5px;
            background: #e4e4e4;
            color: white;
            font-size: 1rem;
            font-weight: bold;
        }

        .contena-list .contenaListing a
        {
            display: block;
            padding: 5px 10px;
            margin: 0;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            color: #404;
            text-decoration: none;
        }

        .contena-list .contenaListing a:last-child
        {
            border: none;
        }

        .contena-list .contenaListing a:hover
        {
            background: #f0f0f0;
        }
/* #endregion */        
/* #region 再表示ボタン */
        #map-F5
        {
            background: #fff;
            position: absolute;
            z-index: 1;
            top: 70px;
            left: 22%;
            width: 120px;
            border-radius: 3px;
            border: 5px solid rgba(0, 0, 0, 0.4);
            font-family: 'Open Sans' , sans-serif;
        }
        #map-F5 b
        {
            font-size: 13px;
            color: #404040;
            display: block;
            margin: 0;
            padding: 0;
            padding: 10px;
            text-decoration: none;
            border-bottom: 1px solid rgba(0, 0, 0, 0.25);
            text-align: center;
        }
        #map-F5 b:last-child
        {
            border: none;
        }
        #map-F5 b.active
        {
            background-color: #3887be;
            color: #ffffff;
        }
        #map-F5 b.active:hover
        {
            background: #3074a4;
        }
/* #endregion */
/* #region 詳細情報表示ボタン */
        #menup {
            background: #fff;
            position: absolute;
            z-index: 1;
            top: 130px;
            left: 22%;
            border-radius: 3px;
            width: 120px;
            border: 5px solid rgba(0, 0, 0, 0.4);
            font-family: 'Open Sans', sans-serif;
        }
 
        #menup b {
            font-size: 13px;
            color: #404040;
            display: block;
            margin: 0;
            padding: 0;
            padding: 10px;
            text-decoration: none;
            border-bottom: 1px solid rgba(0, 0, 0, 0.25);
            text-align: center;
        }
 
        #menup b:last-child {
            border: none;
        }
 
        #menup b:hover {
            background-color: #f8f8f8;
            color: #404040;
        }
 
        #menup b.active {
            background-color: #3887be;
            color: #ffffff;
        }
 
        #menup b.active:hover {
            background: #3074a4;
        }
/* #endregion */
/* #endregion */


    </style>

    <div id="dataInfoLabel">@header</div>
    <div id="dataInfoLabel2">@secondHeader</div>
    <div id="wariateLabel">割当済み（@wariateCount）</div>
    <div id="secchiContenaLabel">設置コンテナ（@contenaCount）</div>
    <div id="mihaishaLabel">未配車（@mihaishaCount）</div>

    <div id="map"></div>
    <div class="wariate-list">
        <fieldset>
            <input id="filter-wariate" type="text" placeholder="コードか名称でフィルタリングします" />
        </fieldset>
        <div id="feature-wariate" class="wariateListing">
        </div>
    </div>
    <div class="mihaisha-list">
        <fieldset>
            <input id="filter-mihaisha" type="text" placeholder="コードか名称でフィルタリングします" />
        </fieldset>
        <div id="feature-mihaisha" class="mihaishaListing">
        </div>
    </div>
    <div class="contena-list">
        <fieldset>
            <input id="filter-contena" type="text" placeholder="コードか名称でフィルタリングします" />
        </fieldset>
        <div id="feature-contena" class="contenaListing">
        </div>
    </div>
    <nav id='map-F5'></nav>
    <nav id='menup'></nav>

<script>

    mapboxgl.accessToken = '@accessToken';
    var coordinates = document.getElementById('coordinates');
    var map = new mapboxgl.Map({
        container: 'map',
        style: '@style',
        center: [@Center],
        zoom: @Zoom,
        maxZoom: 16,
        minZoom: 1
    });

    // 拡大・縮小・回転のコントロールを追加
    map.addControl(new mapboxgl.NavigationControl());

    // ポップアップを追加するが、まだマップには追加しない
    var popup = new mapboxgl.Popup({
        closeButton: false
    });
    // ポップアップを追加するが、まだマップには追加しない
    var popup2 = new mapboxgl.Popup({
        closeButton: false
    });

    // 再表示ボタンの設定
    var link = document.createElement('b');
    link.href = '#';
    link.className = 'active';
    link.textContent = '再表示';
    link.onmousedown = function(e){
        this.className = '';
        // 地図を元の位置に戻す
        map.flyTo({
            center: [@Center],
            zoom: @Zoom,
            bearing: 0,
            speed: 3,
            curve: 1,
            easing: function(t) {
                return t;
            },
            essential: true
        });
    };
    link.onmouseup = function(e){
        this.className = 'active';
    };
    var layers = document.getElementById('map-F5');
    layers.appendChild(link);

    var wariateListingEl = document.getElementById('feature-wariate');
    var mihaishaListingEl = document.getElementById('feature-mihaisha');
    var contenaListingEl = document.getElementById('feature-contena');

    var wariateVisibleEl = document.getElementById('wariateLabel');
    var mihaishaVisibleEl = document.getElementById('mihaishaLabel');
    var contenaVisibleEl = document.getElementById('secchiContenaLabel');

// データはあらかじめ変数にセットしておく
var pointWariateList = @wariateSource;
var pointMihaishaList = @mihaishaSource;
var pointContenaList = @contenaSource;

    // 割当済みリストに表示する内容を作成する
    function renderListingsWariate(features) {
        var empty = document.createElement('p');
        // 既存のリストをクリア
        wariateListingEl.innerHTML = '';
        if (features.length) {
            features.forEach(function(feature) {
                var prop = feature.properties;
                var item = document.createElement('a');
                item.target = '_blank';
                
                var header = '';
                if (prop.dataKBN == 1 || prop.dataKBN == 2) {
                    // 収集出荷

                    // ヘッダー(順番、伝票種別)
                    if (prop.dataKBN == 1) {
                        header = '【' + prop.rowNo + '】' + prop.denpyouNo + ' － 収集受付';
                    } else if (prop.dataKBN == 2) {
                        header = '【' + prop.rowNo + '】' + prop.denpyouNo + ' － 出荷受付';
                    }
                    var item2 = document.createElement('span');
                    item2.textContent = header;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 現着
                    var item2 = document.createElement('span');
                    item2.textContent = '現　　着：' + prop.genbaChaku;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 業者
                    var item2 = document.createElement('span');
                    item2.textContent = '業　　者：' + prop.gyoushaName;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 現場
                    var item2 = document.createElement('span');
                    item2.textContent = '現　　場：' + prop.genbaName;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 住所
                    var item2 = document.createElement('span');
                    item2.textContent = '住　　所：' + prop.address;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 荷降業者 or 荷積業者
                    var item2 = document.createElement('span');
                    if (prop.dataKBN == 1) {
                        item2.textContent = '荷降業者：' + prop.NNGyoushaName;
                    } else if (prop.dataKBN == 2) {
                        item2.textContent = '荷積業者：' + prop.NNGyoushaName;
                    }
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 荷降現場 or 荷積現場
                    var item2 = document.createElement('span');
                    if (prop.dataKBN == 1) {
                        item2.textContent = '荷降現場：' + prop.NNGenbaName;
                    } else if (prop.dataKBN == 2) {
                        item2.textContent = '荷積現場：' + prop.NNGenbaName;
                    }
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 荷降住所
                    var item2 = document.createElement('span');
                    item2.textContent = '住　　所：' + prop.NNAddress;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // コンテナ
                    var item2 = document.createElement('span');
                    item2.textContent = 'コンテナ：' + prop.contenaName;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 品　名
                    var item2 = document.createElement('span');
                    item2.textContent = '品　　名：' + prop.hinmei;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);
                } else if (prop.dataKBN == 3) {
                    // 定期配車

                    // ヘッダー(順番、作業時間)
                    header = '【' + prop.rowNo + '】' + prop.denpyouNo + ' － 定期配車';
                    var item2 = document.createElement('span');
                    item2.textContent = header;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // コース
                    var item2 = document.createElement('span');
                    item2.textContent = 'コース：' + prop.tabName;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 時間
                    var item2 = document.createElement('span');
                    item2.textContent = '時　間：' + prop.genbaChaku;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // ＜開始＞
                    var coordinateNull = '';
                    if (feature.geometry.Latitude == ''){
                        coordinateNull = '緯度経度なしデータ';
                    }
                    var item2 = document.createElement('span');
                    item2.textContent = '＜開始＞' + coordinateNull;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 業者
                    var item2 = document.createElement('span');
                    item2.textContent = '業　者：' + prop.gyoushaName;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 現場
                    var item2 = document.createElement('span');
                    item2.textContent = '現　場：' + prop.genbaName;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 住所
                    var item2 = document.createElement('span');
                    item2.textContent = '住　所：' + prop.address;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 品名
                    var item2 = document.createElement('span');
                    item2.textContent = '品　名：' + prop.hinmei;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // ＜終了＞
                    var coordinateNull = '';
                    if (feature.geometry.Latitude_2 == ''){
                        coordinateNull = '緯度経度なしデータ';
                    }
                    var item2 = document.createElement('span');
                    item2.textContent = '＜終了＞' + coordinateNull;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 業者
                    var item2 = document.createElement('span');
                    item2.textContent = '業　者：' + prop.gyoushaName_2;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 現場
                    var item2 = document.createElement('span');
                    item2.textContent = '現　場：' + prop.genbaName_2;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 住所
                    var item2 = document.createElement('span');
                    item2.textContent = '住　所：' + prop.address_2;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 品名
                    var item2 = document.createElement('span');
                    item2.textContent = '品　名：' + prop.hinmei_2;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);
                }

                item.addEventListener('mouseover', function() {
                    // 地図上で対応する対象物をハイライトする
                    popup
                        .setLngLat(feature.geometry.coordinates)
                        .setHTML(prop.description)
                        .addTo(map);
                    if (feature.geometry.Latitude_2 != '' && prop.dataKBN == 3) {
                        popup2
                            .setLngLat(feature.geometry.coordinates_2)
                            .setHTML(prop.description_2)
                            .addTo(map);                        
                    }
                });
                item.addEventListener('mouseleave', function() {
                    // リストからカーソルが離れたらポップアップをリムーブ
                    popup.remove();
                    popup2.remove();
                });
                item.addEventListener('click', function(){
                    var obj = flyToCenterZoom(feature);
                    // リストでクリックされた地点をズームする
                    map.flyTo({
                        // center: feature.geometry.coordinates,
                        // zoom: 15,
                        center: [obj['lon'], obj['lat']],
                        zoom: obj['zo'],
                        bearing: 0,
                        speed: 1,
                        curve: 1,
                        easing: function(t) {
                            return t;
                        },
                        essential: true
                    });
                });
                wariateListingEl.appendChild(item);
            });
        } else {
            empty.textContent = '表示データ無し';
            wariateListingEl.appendChild(empty);
        }
    }

    // 未配車リストに表示する内容を作成する
    function renderListingsMihaisha(features) {
        var empty = document.createElement('p');
        // 既存のリストをクリア
        mihaishaListingEl.innerHTML = '';
        if (features.length) {
            features.forEach(function(feature) {
                var prop = feature.properties;
                var item = document.createElement('a');
                item.target = '_blank';
                
                var header = '';
                if (prop.dataKBN == 1 || prop.dataKBN == 2) {
                    // 収集出荷

                    // ヘッダー(順番、伝票種別)
                    if (prop.dataKBN == 1) {
                        header = '【' + prop.rowNo + '】' + prop.denpyouNo + ' － 収集受付';
                    } else if (prop.dataKBN == 2) {
                        header = '【' + prop.rowNo + '】' + prop.denpyouNo + ' － 出荷受付';
                    }
                    var item2 = document.createElement('span');
                    item2.textContent = header;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 現着
                    var item2 = document.createElement('span');
                    item2.textContent = '現　　着：' + prop.genbaChaku;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 業者
                    var item2 = document.createElement('span');
                    item2.textContent = '業　　者：' + prop.gyoushaName;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 現場
                    var item2 = document.createElement('span');
                    item2.textContent = '現　　場：' + prop.genbaName;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 住所
                    var item2 = document.createElement('span');
                    item2.textContent = '住　　所：' + prop.address;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 荷降業者 or 荷積業者
                    var item2 = document.createElement('span');
                    if (prop.dataKBN == 1) {
                        item2.textContent = '荷降業者：' + prop.NNGyoushaName;
                    } else if (prop.dataKBN == 2) {
                        item2.textContent = '荷積業者：' + prop.NNGyoushaName;
                    }
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 荷降現場 or 荷積現場
                    var item2 = document.createElement('span');
                    if (prop.dataKBN == 1) {
                        item2.textContent = '荷降現場：' + prop.NNGenbaName;
                    } else if (prop.dataKBN == 2) {
                        item2.textContent = '荷積現場：' + prop.NNGenbaName;
                    }
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 荷降住所
                    var item2 = document.createElement('span');
                    item2.textContent = '住　　所：' + prop.NNAddress;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // コンテナ
                    var item2 = document.createElement('span');
                    item2.textContent = 'コンテナ：' + prop.contenaName;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 品　名
                    var item2 = document.createElement('span');
                    item2.textContent = '品　　名：' + prop.hinmei;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);
                } else if (prop.dataKBN == 3) {
                    // 定期配車

                    // ヘッダー(順番、作業時間)
                    header = '【' + prop.rowNo + '】' + prop.denpyouNo + ' － 定期配車';
                    var item2 = document.createElement('span');
                    item2.textContent = header;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // コース
                    var item2 = document.createElement('span');
                    item2.textContent = 'コース：' + prop.tabName;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 時間
                    var item2 = document.createElement('span');
                    item2.textContent = '時　間：' + prop.genbaChaku;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // ＜開始＞
                    var coordinateNull = '';
                    if (feature.geometry.Latitude == ''){
                        coordinateNull = '緯度経度なしデータ';
                    }
                    var item2 = document.createElement('span');
                    item2.textContent = '＜開始＞' + coordinateNull;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 業者
                    var item2 = document.createElement('span');
                    item2.textContent = '業　者：' + prop.gyoushaName;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 現場
                    var item2 = document.createElement('span');
                    item2.textContent = '現　場：' + prop.genbaName;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 住所
                    var item2 = document.createElement('span');
                    item2.textContent = '住　所：' + prop.address;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 品　名
                    var item2 = document.createElement('span');
                    item2.textContent = '品　名：' + prop.hinmei;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // ＜終了＞
                    var coordinateNull = '';
                    if (feature.geometry.Latitude_2 == ''){
                        coordinateNull = '緯度経度なしデータ';
                    }
                    var item2 = document.createElement('span');
                    item2.textContent = '＜終了＞' + coordinateNull;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 業者
                    var item2 = document.createElement('span');
                    item2.textContent = '業　者：' + prop.gyoushaName_2;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 現場
                    var item2 = document.createElement('span');
                    item2.textContent = '現　場：' + prop.genbaName_2;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 住所
                    var item2 = document.createElement('span');
                    item2.textContent = '住　所：' + prop.address_2;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);

                    // 品　名
                    var item2 = document.createElement('span');
                    item2.textContent = '品　名：' + prop.hinmei_2;
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);
                }

                item.addEventListener('mouseover', function() {
                    // 地図上で対応する対象物をハイライトする
                    popup
                        .setLngLat(feature.geometry.coordinates)
                        .setHTML(prop.description)
                        .addTo(map);
                    if (feature.geometry.Latitude_2 != '' && prop.dataKBN == 3) {
                        popup2
                            .setLngLat(feature.geometry.coordinates_2)
                            .setHTML(prop.description_2)
                            .addTo(map);                        
                    }
                });
                item.addEventListener('mouseleave', function() {
                    // リストからカーソルが離れたらポップアップをリムーブ
                    popup.remove();
                    popup2.remove();
                });
                item.addEventListener('click', function(){
                    var obj = flyToCenterZoom(feature);
                    // リストでクリックされた地点をズームする
                    map.flyTo({
                        // center: feature.geometry.coordinates,
                        // zoom: 15,
                        center: [obj['lon'], obj['lat']],
                        zoom: obj['zo'],
                        bearing: 0,
                        speed: 1,
                        curve: 1,
                        easing: function(t) {
                            return t;
                        },
                        essential: true
                    });
                });
                mihaishaListingEl.appendChild(item);
            });
        } else {
            empty.textContent = '表示データ無し';
            mihaishaListingEl.appendChild(empty);
        }
    }

    // コンテナリストに表示する内容を作成する
    function renderListingsContena(features) {
        var empty = document.createElement('p');
        // 既存のリストをクリア
        contenaListingEl.innerHTML = '';
        if (features.length) {
            features.forEach(function(feature) {
                var prop = feature.properties;
                var item = document.createElement('a');
                item.target = '_blank';

                // 緯度経度なしの場合
                if (feature.geometry.Latitude == '') {
                    var item2 = document.createElement('span');
                    item2.textContent = '緯度経度なしデータ';
                    item.appendChild(item2);
                    var item2 = document.createElement('br');
                    item.appendChild(item2);
                }

                // 重複
                var item2 = document.createElement('span');
                item2.textContent = '重複：' + prop.secchiChouhuku;
                item.appendChild(item2);
                var item2 = document.createElement('br');
                item.appendChild(item2);
                
                // コンテナ種類
                var item2 = document.createElement('span');
                item2.textContent = '種類：' + prop.contenaShuruiName;
                item.appendChild(item2);
                var item2 = document.createElement('br');
                item.appendChild(item2);
                
                // コンテナ名
                var item2 = document.createElement('span');
                item2.textContent = '名称：' + prop.contenaName;
                item.appendChild(item2);
                var item2 = document.createElement('br');
                item.appendChild(item2);

                // 業者
                var item2 = document.createElement('span');
                item2.textContent = '業者：' + prop.gyoushaName;
                item.appendChild(item2);
                var item2 = document.createElement('br');
                item.appendChild(item2);

                // 現場
                var item2 = document.createElement('span');
                item2.textContent = '現場：' + prop.genbaName;
                item.appendChild(item2);
                var item2 = document.createElement('br');
                item.appendChild(item2);

                // 住所
                var item2 = document.createElement('span');
                item2.textContent = '住所：' + prop.address;
                item.appendChild(item2);
                var item2 = document.createElement('br');
                item.appendChild(item2);

                // 日数
                var item2 = document.createElement('span');
                item2.textContent = '日数：' + prop.daysCount + '日';
                item.appendChild(item2);
                var item2 = document.createElement('br');
                item.appendChild(item2);

                item.addEventListener('mouseover', function() {
                    if (feature.geometry.Latitude != '') {
                        // 地図上で対応する対象物をハイライトする
                        popup
                            .setLngLat(feature.geometry.coordinates)
                            .setHTML(prop.description)
                            .addTo(map);
                    }
                });
                item.addEventListener('mouseleave', function() {
                    // リストからカーソルが離れたらポップアップをリムーブ
                    popup.remove();
                });
                item.addEventListener('click', function(){
                    if (feature.geometry.Latitude != '') {
                        // リストでクリックされた地点をズームする
                        map.flyTo({
                            center: feature.geometry.coordinates,
                            zoom: 15,
                            bearing: 0,
                            speed: 1,
                            curve: 1,
                            easing: function(t) {
                                return t;
                            },
                            essential: true
                        });
                    }
                });
                contenaListingEl.appendChild(item);
            });
        } else {
            empty.textContent = '表示データ無し';
            contenaListingEl.appendChild(empty);
        }
    }

    // 文字列をtrimして小文字に変換した上で返す
    function normalize(string) {
        return string.trim().toLowerCase();
    }

    // リストクリック時のflyToに使用する地点を算出する
    function flyToCenterZoom(feature) {
        var prop = feature.properties;
        var geo = feature.geometry;
        if (prop.dataKBN == 1 || prop.dataKBN == 2) {
            // 収集出荷はそのまま返す
            return {
                lat: geo.Latitude,
                lon: geo.Longitude,
                zo: 15
            };

        } else if (prop.dataKBN == 3) {
            // FromTo両方位置なしは何も返さない
            // 片方でもある場合はそちらを返す
            if (geo.Latitude == '' && geo.Latitude_2 == '') {
                return {
                    lat: returnLat,
                    lon: returnLon,
                    zo: zoom - 1
                };
            }
            if (geo.Latitude == '') {
                return {
                    lat: geo.Latitude_2,
                    lon: geo.Longitude_2,
                    zo: 15
                };
            }
            if (geo.Latitude_2 == '') {
                return {
                    lat: geo.Latitude,
                    lon: geo.Longitude,
                    zo: 15
                };
            }

            // 定期配車は2点から計算する
            var returnLat = 0;
            var returnLon = 0;
            var difLat = 0;
            var difLon = 0;
            var difValue = 15;
            if (geo.Latitude < geo.Latitude_2){
                difLat = geo.Latitude_2 - geo.Latitude;
            } else {
                difLat = geo.Latitude - geo.Latitude_2;
            }
            if (geo.Longitude < geo.Longitude_2){
                difLon = geo.Longitude_2 - geo.Longitude;
            } else {
                difLon = geo.Longitude - geo.Longitude_2;
            }
            if (difLat < difLon){
                difValue = difLon;
            } else {
                difValue = difLat;
            }

            if (difValue < 0.015)
            {
                zoom = 15;
            }
            else if (difValue < 0.025)
            {
                zoom = 14.5;
            }
            else if (difValue < 0.038)
            {
                zoom = 14;
            }
            else if (difValue < 0.045)
            {
                zoom = 13.5;
            }
            else if (difValue < 0.075)
            {
                zoom = 13;
            }
            else if (difValue < 0.1)
            {
                zoom = 12;
            }
            else if (difValue < 0.3)
            {
                zoom = 11;
            }
            else if (difValue < 0.53)
            {
                zoom = 10;
            }
            else if (difValue < 1.1)
            {
                zoom = 9;
            }
            else if (difValue < 2.45)
            {
                zoom = 8;
            }
            else if (difValue < 4.65)
            {
                zoom = 7;
            }
            else if (difValue < 9.4)
            {
                zoom = 6;
            }
            else if (difValue < 10.6)
            {
                zoom = 5.5;
            }
            else if (difValue < 11.4)
            {
                zoom = 5;
            }
            else if (difValue < 16.5)
            {
                zoom = 4.5;
            }
            else if (difValue < 23)
            {
                zoom = 4;
            }
            else
            {
                zoom = 4;
            }

            returnLat = (parseFloat(geo.Latitude) + parseFloat(geo.Latitude_2)) / 2;
            returnLon = (parseFloat(geo.Longitude) + parseFloat(geo.Longitude_2)) / 2;
            return {
                lat: returnLat,
                lon: returnLon,
                zo: zoom - 1
            };
        }
    }

// ポップアップ表示切替
@PopupSource

// 初期表示はリムーブした状態
@PopupRemove

    var toggleableLayerIds = ['　 詳細情報　　表示'];
    for (var i = 0; i < toggleableLayerIds.length; i++) {
        var id = toggleableLayerIds[i];
        var link = document.createElement('b');
        link.href = '#';
        link.className = 'active';
        link.textContent = id;
        link.onclick = function(e) {
            var clickedLayer = this.textContent;
            e.preventDefault();
            e.stopPropagation();

            if (this.className === 'active') {
                this.className = '';
                link.textContent = '　 詳細情報　　非表示';
                // 全ポップアップ表示の処理
                for (var j = 1; j < 2; j++) {
@PopupAdd
                }
            } else {
                this.className = 'active';
                link.textContent = '　 詳細情報　　表示';
                // 全ポップアップ非表示の処理
                for (var j = 1; j < 2; j++) {
@PopupRemove
                }
            }
        };

        var layers = document.getElementById('menup');
        layers.appendChild(link);
    }

    function wariateVisivleChange(){
        if (pointWariateList.length) {
            //リスト表示/非表示設定用
            var item_visible2;
            //切替ボタンの設定
            item_visible2 = document.createElement('button');
            item_visible2.value = 1;
            item_visible2.textContent = '表示切替';
            item_visible2.style.marginRight = "0.5rem";
            //ボタンのクリックイベント追加
            item_visible2.addEventListener('click', 
                function(e){ 
                    var ChangeStatus = document.getElementById('visible_status_1');
                    if (map.getLayoutProperty('meisai1', 'visibility') == 'visible' ||
                        map.getLayoutProperty('rowNumber1', 'visibility') == 'visible') { 
                        map.setLayoutProperty('meisai1', 'visibility', 'none');
                        map.setLayoutProperty('rowNumber1', 'visibility', 'none');
                        ChangeStatus.textContent = '非表示';
                        ChangeStatus.style.cssText = "color:black; font-size:15px;";
                    } else {
                        map.setLayoutProperty('meisai1', 'visibility', 'visible');
                        map.setLayoutProperty('rowNumber1', 'visibility', 'visible');
                        ChangeStatus.textContent = '表示';
                        ChangeStatus.style.cssText = "color:white; font-weight:bold; font-size:15px;";
                    }
                    ChangeStatus.style.verticalAlign = "middle";
                }
            );
            wariateVisibleEl.appendChild(item_visible2);
            //ステータス文字の設定
            item_visible2 = document.createElement('span');
            item_visible2.textContent = '表示';
            item_visible2.style.cssText = "color:white; font-weight:bold; font-size:15px;";
            item_visible2.style.verticalAlign = "middle";
            item_visible2.id = 'visible_status_1';
            wariateVisibleEl.appendChild(item_visible2);
        }
    }

    function mihaishaVisivleChange(){
        if (pointMihaishaList.length) {
            //リスト表示/非表示設定用
            var item_visible2;
            //切替ボタンの設定
            item_visible2 = document.createElement('button');
            item_visible2.value = 0;
            item_visible2.textContent = '表示切替';
            item_visible2.style.marginRight = "0.5rem";
            //ボタンのクリックイベント追加
            item_visible2.addEventListener('click', 
                function(e){ 
                    var ChangeStatus = document.getElementById('visible_status_0');
                    if (map.getLayoutProperty('meisai0', 'visibility') == 'visible' ||
                        map.getLayoutProperty('rowNumber0', 'visibility') == 'visible') { 
                        map.setLayoutProperty('meisai0', 'visibility', 'none');
                        map.setLayoutProperty('rowNumber0', 'visibility', 'none');
                        ChangeStatus.textContent = '非表示';
                        ChangeStatus.style.cssText = "color:black; font-size:15px;";
                    } else {
                        map.setLayoutProperty('meisai0', 'visibility', 'visible');
                        map.setLayoutProperty('rowNumber0', 'visibility', 'visible');
                        ChangeStatus.textContent = '表示';
                        ChangeStatus.style.cssText = "color:white; font-weight:bold; font-size:15px;";
                    }
                    ChangeStatus.style.verticalAlign = "middle";
                }
            );
            mihaishaVisibleEl.appendChild(item_visible2);
            //ステータス文字の設定
            item_visible2 = document.createElement('span');
            item_visible2.textContent = '表示';
            item_visible2.style.cssText = "color:white; font-weight:bold; font-size:15px;";
            item_visible2.style.verticalAlign = "middle";
            item_visible2.id = 'visible_status_0';
            mihaishaVisibleEl.appendChild(item_visible2);
        }
    }

    function contenaVisivleChange(){        
        if (pointContenaList.length) {
            //リスト表示/非表示設定用
            var item_visible2;
            //切替ボタンの設定
            item_visible2 = document.createElement('button');
            item_visible2.value = 2;
            item_visible2.textContent = '表示切替';
            item_visible2.style.marginRight = "0.5rem";
            //ボタンのクリックイベント追加
            item_visible2.addEventListener('click', 
                function(e){ 
                    var ChangeStatus = document.getElementById('visible_status_2');
                    for (let i = 0; i < @contenaCount; i++) {
                        if (map.getLayoutProperty('meisai' + (i + 2), 'visibility') == 'visible' ||
                            map.getLayoutProperty('rowNumber' + (i + 2), 'visibility') == 'visible') { 
                            map.setLayoutProperty('meisai' + (i + 2), 'visibility', 'none');
                            map.setLayoutProperty('rowNumber' + (i + 2), 'visibility', 'none');
                            ChangeStatus.textContent = '非表示';
                            ChangeStatus.style.cssText = "color:black; font-size:15px;";
                        } else {
                            map.setLayoutProperty('meisai' + (i + 2), 'visibility', 'visible');
                            map.setLayoutProperty('rowNumber' + (i + 2), 'visibility', 'visible');
                            ChangeStatus.textContent = '表示';
                            ChangeStatus.style.cssText = "color:white; font-weight:bold; font-size:15px;";
                        }
                        ChangeStatus.style.verticalAlign = "middle";
                    }
                }
            );
            contenaVisibleEl.appendChild(item_visible2);
            //ステータス文字の設定
            item_visible2 = document.createElement('span');
            item_visible2.textContent = '表示';
            item_visible2.style.cssText = "color:white; font-weight:bold; font-size:15px;";
            item_visible2.style.verticalAlign = "middle";
            item_visible2.id = 'visible_status_2';
            contenaVisibleEl.appendChild(item_visible2);
        }
    }


    // 地図のロードイベント
    map.on('load', function() {



// コース明細のレイヤーを追加
@Cource

// コース明細用の数値表示レイヤーを追加
@NumberLayer

// マウスカーソルがマーカーに重なった時のイベント
@mouseover

// マウスカーソルがマーカーから離れた時のイベント
@mouseleave

        // 初期化時にこの関数を呼び出し
        // 空の配列を渡してからの状態をレンダリングします
        renderListingsWariate([]);
        renderListingsMihaisha([]);
        renderListingsContena([]);

        // リストオーバーレイの機能を設定します
        renderListingsWariate(pointWariateList);
        renderListingsMihaisha(pointMihaishaList);
        renderListingsContena(pointContenaList);

        // 表示非表示の切替処理追加
        wariateVisivleChange();
        mihaishaVisivleChange();
        contenaVisivleChange();
    });

    </script>
</body>
</html>