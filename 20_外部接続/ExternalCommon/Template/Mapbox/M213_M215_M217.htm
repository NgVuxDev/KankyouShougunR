<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@Title</title>
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no" />
    <script src="https://api.mapbox.com/mapbox-gl-js/v1.10.0/mapbox-gl.js"></script>
    <link href="https://api.mapbox.com/mapbox-gl-js/v1.10.0/mapbox-gl.css" rel="stylesheet" />
    <style>
        body
        {
            margin: 0;
            padding: 0;
        }
        #map
        {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 100%;
        }
    </style>
</head>
<body>
    <style>
        #map
        {
            position: absolute;
            left: 20%;
            top: 0;
            bottom: 0;
            width: 80%;
        }
        
        .coordinates
        {
            background: rgba(0, 0, 0, 0.5);
            color: #fff;
            position: absolute;
            bottom: 6%;
            left: 21%;
            padding: 5px 10px;
            margin: 0;
            font-size: 14px;
            line-height: 18px;
            border-radius: 3px;
            display: none;
        }
        
        .map-list
        {
            position: absolute;
            width: 20%;
            top: 0%;
            bottom: 0;
            left: 0;
            font: 12px/20px 'Helvetica Neue' , Arial, Helvetica, sans-serif;
            background-color: #fff;
            max-height: 100%;
            overflow: hidden;
        }
        .map-list .listing
        {
            overflow: auto;
            top: 0%;
            height: 100%;
        }
        .map-list .listing > *
        {
            display: block;
            padding: 5px 10px;
            margin: 0;
        }
        .map-list .listing a
        {
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            color: #404;
            text-decoration: none;
        }
        .map-list .listing a:last-child
        {
            border: none;
        }
        .map-list .listing a:hover
        {
            background: #f0f0f0;
        }
        
        #map-F5
        {
            background: #fff;
            position: absolute;
            z-index: 1;
            top: 2%;
            left: 21%;
            width: 120px;
            border-radius: 3px;
            border: 5px solid rgba(0, 0, 0, 0.4);
            font-family: 'Open Sans' , sans-serif;
        }
        #map-F5 b
        {
            font-size: 13px;
            color: #404040;
            display: block;
            margin: 0;
            padding: 0;
            padding: 10px;
            text-decoration: none;
            border-bottom: 1px solid rgba(0, 0, 0, 0.25);
            text-align: center;
        }
        #map-F5 b:last-child
        {
            border: none;
        }
        #map-F5 b.active
        {
            background-color: #3887be;
            color: #ffffff;
        }
        #map-F5 b.active:hover
        {
            background: #3074a4;
        }
        
    </style>
    <div id="map"></div>
    <pre id="coordinates" class="coordinates"></pre>
    <nav id='map-F5'></nav>
    <div class="map-list">
        <div id="feature-listing" class="listing"></div>
    </div>
    <script>

    var ArrayList = @allSource;

    mapboxgl.accessToken = '@accessToken';
    var coordinates = document.getElementById('coordinates');
    var map = new mapboxgl.Map({
        container: 'map',
        style: '@style',
        center: [@Center],
        zoom: @Zoom,
        maxZoom: 16,
        minZoom: 1
    });

    // 拡大・縮小・回転のコントロールを追加
    map.addControl(new mapboxgl.NavigationControl());

    var listingEl = document.getElementById('feature-listing');

    // 左側の表示現場データの情報を作成
    function renderListings(features) {
        if (features.length) {
            features.forEach(function(feature) {
                var prop = feature.properties;

                if (prop.dataShurui == '0') {
                    // 取引先
                    var item = document.createElement('span');
                    item.textContent = '取引先CD：' + prop.torihikisakiCd;
                    listingEl.appendChild(item);
                    var item = document.createElement('br');
                    listingEl.appendChild(item);
                    var item = document.createElement('span');
                    item.textContent = '取引先名：' + prop.torihikisakiName;
                    listingEl.appendChild(item);
                }
                if (prop.dataShurui == '1' || prop.dataShurui == '2') {
                    // 業者情報
                    var item = document.createElement('span');
                    item.textContent = '業者CD：' + prop.gyoushaCd;
                    listingEl.appendChild(item);
                    var item = document.createElement('br');
                    listingEl.appendChild(item);
                    var item = document.createElement('span');
                    item.textContent = '業者名：' + prop.gyoushaName;
                    listingEl.appendChild(item);
                }
                if (prop.dataShurui == '2') {
                    // 現場情報
                    var item = document.createElement('br');
                    listingEl.appendChild(item);
                    var item = document.createElement('span');
                    item.textContent = '現場CD：' + prop.genbaCd;
                    listingEl.appendChild(item);
                    var item = document.createElement('br');
                    listingEl.appendChild(item);
                    var item = document.createElement('span');
                    item.textContent = '現場名：' + prop.genbaName;
                    listingEl.appendChild(item);
                }

                // 住所情報
                var item = document.createElement('br');
                listingEl.appendChild(item);
                var item = document.createElement('span');

                item.textContent = '住所：';
                // 住所1がある場合
                if (prop.address != ''){
                    item.textContent += prop.address;
                }
                listingEl.appendChild(item);

            });
        }
    }

    // マーカー移動後の緯度経度を表示させるイベント
    function onDragEnd() {
        var lngLat = marker.getLngLat();
        coordinates.style.display = 'block';
        coordinates.innerHTML = '緯度: ' + lngLat.lat + '<br />経度: ' + lngLat.lng;
    }

    // マーカーを設置
    var marker = new mapboxgl.Marker({
        draggable: true
    })
        //.setLngLat([141.135644, 39.702608])
        .setLngLat([@Center],)
        .addTo(map);

    // 左側の表示現場データの情報を作成
    renderListings(ArrayList);

    // 地図表示時にも緯度経度を表示させるため外出し
    var lngLat = marker.getLngLat();
    coordinates.style.display = 'block';
    coordinates.innerHTML = '緯度: ' + lngLat.lat + '<br />経度: ' + lngLat.lng;

    // マーカー移動後の緯度経度を表示させる
    marker.on('dragend', onDragEnd);

    // 再表示ボタンの設定
    var link = document.createElement('b');
    link.href = '#';
    link.className = 'active';
    link.textContent = '再表示';
    link.onmousedown = function(e){
        this.className = '';
        // マーカーを元の位置に戻す
        marker.setLngLat([@Center]);
        // 地図を元の位置に戻す
        map.flyTo({
            center: [@Center],
            zoom: @Zoom,
            bearing: 0,
            speed: 3,
            curve: 1,
            easing: function(t) {
                return t;
            },
            essential: true
        });
        // 緯度経度の表示を戻す
        onDragEnd();
    };
    link.onmouseup = function(e){
        this.className = 'active';
    };
    var layers = document.getElementById('map-F5');
    layers.appendChild(link);

    </script>
</body>
</html>
